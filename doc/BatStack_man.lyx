#LyX 1.6.8 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble
% BatStack technical documentation
%
%
% Scott Livingston  <slivingston@caltech.edu>
% Apr-Nov 2010.




\usepackage{hyperref}


\title{BatStack\\ :: reference manual ::}
\author{Scott Livingston\footnote{Email by slivingston@caltech.edu}}
\date{{\small Last updated:} \today}
\end_preamble
\use_default_options false
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
BatStack
\begin_inset Newline newline
\end_inset

 :: reference manual ::
\end_layout

\begin_layout Author
Scott Livingston
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Email by slivingston@caltech.edu
\end_layout

\end_inset


\end_layout

\begin_layout Date

\size small
Last updated:
\size default
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset Newpage newpage
\end_inset

 
\begin_inset FloatList figure

\end_inset


\begin_inset FloatList table

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
The 
\shape italic
ambition
\shape default
 of this document is to completely describe the operation and design of
 the Batlab Microphone Array Project, often called the 
\begin_inset Quotes eld
\end_inset

BatStack
\begin_inset Quotes erd
\end_inset

.
 Note that the term 
\begin_inset Quotes eld
\end_inset

BatStack
\begin_inset Quotes erd
\end_inset

 refers specifically to the individual nodes, though it may serve as a reference
 to the project as a whole.
 This document and the project files (firmware code, hardware designs, etc.)
 aspire to include a sufficient level of detail to allow independent constructio
n of the entire system from nothing.
 The reader is expected to have basic knowledge of acoustics, digital electronic
s and core ideas from 
\begin_inset Quotes eld
\end_inset

signals and systems.
\begin_inset Quotes erd
\end_inset

 We strive for technical precision, rather than scientific research motivation
 and exposition.
 For the latter, manuscripts are forthcoming.
\end_layout

\begin_layout Standard

\shape italic
Please notify me of any errors --no matter how small-- and of general criticism
 on this work.

\shape default
 I would in particular like to know what is unclear or ambiguous, and which
 of my assumptions on the reader's background are too strong.
\end_layout

\begin_layout Standard
Throughout the manual, we use the notation and conventions listed in 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
mbox{
\end_layout

\end_inset

Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "notation:tbl"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
 
\begin_inset Caption

\begin_layout Plain Layout
Notation
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "notation:tbl"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Symbol/Style
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
monospace
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
system directories, program names, sample code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
italics
\shape default
, 
\series bold
bold
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PAY ATTENTION! or, key terms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
$
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unix terminal, in user mode
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
#
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unix terminal, in super-user (i.e., 
\begin_inset Quotes eld
\end_inset

root
\begin_inset Quotes erd
\end_inset

) mode
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
>>
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Octave or Matlab prompt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
w.r.t.
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

with respect to
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
N.B.
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

nota bene
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
;-P 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wink, smiley face with playful tongue
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Please note that, for the most part
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
And I will make this precise later.
\end_layout

\end_inset

, file naming conventions are not strict.
 In particular, most (or all?) software works with the file data itself
 and otherwise ignores the name chosen.
 However, in some cases (e.g.
 Radiance) file search filters use these name conventions to ease your organizat
ion.
\end_layout

\begin_layout Section
Overview and motivation of system
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "overview:sec"

\end_inset


\end_layout

\begin_layout Standard
To fully understand the design (as implemented in the hardware before you)
 requires some history, which I won't go into here.
 It is best in this case to consider the problem that motivates the system,
 and see what minimal system features would help us achieve our scientific
 goals.
\end_layout

\begin_layout Standard
To begin, we wish to study the sonar beam structure of the echolocating
 bat (actually, motivated by a particular species: 
\shape italic
E.
\begin_inset space ~
\end_inset

fuscus
\shape default
, though a more widely applicable tool would be nice).
 In other words, we are interested in the spatial and spectral characteristics
 of a time-varying waveform emitted from one or more points (or 
\begin_inset Quotes eld
\end_inset

bats
\begin_inset Quotes erd
\end_inset

) in space.
 It is acoustic, so the usual spreading loss and atmospheric (frequency
 dependent) absorption issues apply.
 We can address the spectro-temporal aspects of the signal by simply recording
 from a microphone with appropriate filtering and amplification to measure
 ultrasound.
 The spatial aspects of the signal are measured by scattering the microphones
 throughout space, where they act as samplers of the sound field.
 With proper synchronization across channels, recordings then provide a
 rich view of the bat's vocalizations: intensity and spectral information
 over space, which --when traced back to the source's perspective-- reveals
 features of the sonar beam structure.
\end_layout

\begin_layout Standard
More concretely from experimental data, which can readily be collected from
 a free flying and foraging bat, we know that frequency content of the signal
 of interest goes up to about 110
\begin_inset space ~
\end_inset

kHz.
 A good target sampling rate (given the Nyquist rate from our bandwidth)
 is approximately 250
\begin_inset space ~
\end_inset

kSps
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
where 
\begin_inset Quotes eld
\end_inset

kSps
\begin_inset Quotes erd
\end_inset

 means 
\begin_inset Quotes eld
\end_inset

1000 samples per second.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

.
 Any ADC device has some sample width, which we assume here to fit in 16
 bits, i.e.
 actual sample width could be 10 bits, 12 bits, etc., but we would need 16
 bits space for each (assuming we are not packing, which could add overhead;
 and assuming a byte-aligned system).
\end_layout

\begin_layout Standard
Thus, for a single channel, we would need 
\begin_inset Formula $(16\mathrm{~bits})\cdot{}(250\mathrm{~kSps})\approx3.81$
\end_inset


\begin_inset space ~
\end_inset

Mbps
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
where 
\begin_inset Quotes eld
\end_inset

Mbps
\begin_inset Quotes erd
\end_inset

 means 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $2^{20}$
\end_inset

 bits per second.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Because we are interested not only in spectral and temporal information,
 but also spatial, we should simultaneously measure from many points in
 space.
 In principle, with waveforms captured at fine enough resolution in some
 region of space where a bat vocalizes, we could characterize individual
 sonar beams (i.e., what the bat generated on a particular call).
 Suppose we are interested in 32 channels, i.e.
 sampling from 32 fixed positions in the sound field.
 Then the total data throughput is 
\begin_inset Formula $3.81\cdot{}32\approx122.07$
\end_inset


\begin_inset space ~
\end_inset

Mbps.
 Please note that this estimate is 
\shape italic
without data container overhead
\shape default
; that is, in practice, we would need some way to specify which sample came
 from which channel, and possibly timestamps and checksums or some other
 error detection/correction mechanism if we are transferring these data
 far before recording them (whether on disk, in SRAM
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Static Random-Access Memory.
\end_layout

\end_inset

, etc.).
\end_layout

\begin_layout Standard
And so, our basic problem and needs are thus stated.
 How do we achieve these requirements? What about additional design issues
 such as reliability, durability, cost, ease of use, etc.? Or features uniquely
 helpful to animal behavior research?
\end_layout

\begin_layout Standard
Recording from many locations at once is not at all a new problem.
 Our primary difficulty (I claim) is dealing with the high sampling rate
 per channel required to record ultrasound, combined with limited funding,
 or at least the desire to engineer an affordable solution to make the resulting
 system generally accessible to the scientific community.
\end_layout

\begin_layout Standard
Broadly, the array consists of two major components: an embedded collection
 of local recording systems, and data management, processing and analysis
 tools for a 
\begin_inset Quotes eld
\end_inset

host computer.
\begin_inset Quotes erd
\end_inset

 Single units of the former are called 
\begin_inset Quotes eld
\end_inset

BatStacks
\begin_inset Quotes erd
\end_inset

, or simply, 
\begin_inset Quotes eld
\end_inset

Stacks
\begin_inset Quotes erd
\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\shape italic
historical note:
\shape default
 this name is due to earlier designs by Murat Aytekin, which had 4 or so
 layers of printed circuit board (PCB).
\end_layout

\end_inset

.
 Each Stack has a microcontroller, 4 SRAM chips, headers for 4 microphone
 channels, and some small interface-related circuitry.
 A microphone channel is made up of a small electret microphone, an amplifier
 board, and a shielded cable between the amplifier and its parent Stack.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "hardware:sec"

\end_inset

 for details on hardware design, parts, etc.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "firmware:sec"

\end_inset

 for a description of firmware, including setting up a build environment
 (in case you wish to modify or extend the firmware).
\end_layout

\begin_layout Standard
The host-side tools serve mainly two types of purpose: 
\begin_inset Quotes eld
\end_inset

low level
\begin_inset Quotes erd
\end_inset

 data manipulation and preparation, and data processing and analysis.
 Some notes on 
\begin_inset Quotes eld
\end_inset

low level
\begin_inset Quotes erd
\end_inset

 tools are compiled in Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "misctools:sec"

\end_inset

.
 However, for such small items, comments in the code are often the best
 reference, and mention of the program in this manual is limited to in-place
 description as needed.
 Data processing and analysis happen primarily through the application Radiance
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "radiance:sec"

\end_inset

) and its visualization companion 
\family typewriter
beamviz
\family default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics
	filename figures/hilevel_desc.png
	width 5in

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset OptArg
status collapsed

\begin_layout Plain Layout
High-level system description
\end_layout

\end_inset

High-level, systems description of the Array.
 Four microphones (and attached amplifiers) are shown to connect to a single
 
\begin_inset Quotes eld
\end_inset

BatStack
\begin_inset Quotes erd
\end_inset

, which receives power from a battery or a generic mains (i.e.
 wall socket power) supply.
 The BatStack is triggered externally to initiate (or stop) recording in
 synchrony with other devices.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "blocksys:fig"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A simplified diagram of the current deployed system (at time of writing)
 is in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "blocksys:fig"

\end_inset

.
 After being powered on, and given a virgin or mated SD card (cf.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "setup:sec"

\end_inset

), a Stack will become ready to record.
 The basic operation is then 
\end_layout

\begin_layout Enumerate
Wait for trigger signal.
 Sample all four microphones with a period of 3.75 
\begin_inset Formula $\mu$
\end_inset

s (hence, sampling rate is 
\begin_inset Formula $\approx$
\end_inset

266 kSps).
 Continuously write to a cyclic buffer 
\shape italic
external
\shape default
 to the microcontroller.
\end_layout

\begin_deeper
\begin_layout Standard
While waiting, a single green LED on the Stack will flash on-and-off slowly.
 This can be interpreted as a 
\begin_inset Quotes eld
\end_inset

ready
\begin_inset Quotes erd
\end_inset

 signal, but note that 
\shape italic
blinking begins before a first full pre-trigger sequence of samples is recorded
 in the buffer
\shape default
.
 That is, if you are configured for 2 seconds pre-trigger, but then pulse
 the trigger 1 second after seeing the green light begin to blink, then
 the first second of trial data will be undefined
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
actually, either junk values or part of the last trial.
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
After receiving trigger, sample and record as many post-trigger blocks as
 specified by the Stack configuration (cf.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "config:sec"

\end_inset

).
 E.g., I typically use an end-trigger, where the last (approximate) 4 seconds
 up to the trigger itself are recorded.
\end_layout

\begin_deeper
\begin_layout Standard
Upon triggering, the 
\begin_inset Quotes eld
\end_inset

ready
\begin_inset Quotes erd
\end_inset

 light stops periodic blinking and will not recommence until Stack is ready
 for the next trial.
\end_layout

\end_deeper
\begin_layout Enumerate
Then dump the captured trial to an attached SD card (or some other bulk
 storage; other possibilities are under consideration).
 For a full (approx.
 4 seconds) recording, copy time is about 1 minute.
\end_layout

\begin_deeper
\begin_layout Standard
To indicate activity, a green LED on the Stack toggles for each block transferre
d to the SD card.
 Most likely this light will blink so quickly that you will not notice it
 (i.e., it will appear continuously on) but occasionally block writes are
 delayed, which will be visible by prolonged moments of light on or off.
\end_layout

\end_deeper
\begin_layout Enumerate
Assuming no fatal errors are encountered, prepare for and return to 
\begin_inset Quotes eld
\end_inset

ready
\begin_inset Quotes erd
\end_inset

 state, thus waiting for the trigger signal of the next trial.
 
\end_layout

\begin_layout Standard
Stacks may be powered off whenever they are ready to be triggered.
 Hard kills at other times could corrupt the contents of bulk storage (i.e.
 the SD card).
\end_layout

\begin_layout Standard
After an experiment session completes, the investigator 
\end_layout

\begin_layout Enumerate
gathers all SD cards (one per Stack);
\end_layout

\begin_layout Enumerate
saves results to a host machine by running 
\family typewriter
dumpsd
\family default

\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\family typewriter
dumpsd
\family default
 is under 
\begin_inset Quotes eld
\end_inset

src/util/dumpsd
\begin_inset Quotes erd
\end_inset

 in the BatStack source tree.
\end_layout

\end_inset

 (cf.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "usage:sec"

\end_inset

) on each card in succession; and
\end_layout

\begin_layout Enumerate
for each trial, combines data from separate stacks into single array data
 files (See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "array_format:sec"

\end_inset

 for specification)
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This step requires knowledge of your chosen global numbering scheme, i.e.
 which microphone is channel 1, which is channel 2, and so on.
 Accurate labels are critically important for calibration, data management
 and analysis.
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
Given calibration (cf.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "setup:sec"

\end_inset

) measurements, the investigator can then begin marking vocalizations in
 Radiance (cf.
 Section 
\begin_inset CommandInset label
LatexCommand label
name "radiance:sec"

\end_inset

) and start scientific analysis.
 As stated earlier, processing and analysis of microphone array data are
 distinct from recording.
 That is, once trial data files are generated, any tool may be used (or
 newly developed) that recognizes the file specification (cf.
 Sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "array_format:sec"

\end_inset

)\SpecialChar \ldots{}
 your methodology is not restricted to the Radiance or 
\family typewriter
beamviz
\family default
 applications
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Indeed, one of my design goals is modularity.
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Usage, or How to be a 
\begin_inset Quotes eld
\end_inset

badass
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "usage:sec"

\end_inset


\end_layout

\begin_layout Standard
In this section, we will step through all major aspects of usage: construction,
 installation, testing, calibration, experimental recordings, and data manipulat
ion.
 This is written in tutorial fashion with plentiful footnotes and links
 to other more detailed and referential parts of the manual where appropriate.
 Unlike other sections, you should treat this part as a story, told by a
 campfire.
 So grab a neighborly cup of coffee, and let's begin.
\end_layout

\begin_layout Subsection
Construction
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "construct:sec"

\end_inset


\end_layout

\begin_layout Standard
As noted in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "overview:sec"

\end_inset

, the Array consists of two major divisions: a localized recording system
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

localized
\begin_inset Quotes erd
\end_inset

 in the sense that there are many small nodes at which the magic happens
 and distributed in your experimental setup (e.g.
 within a flightroom or anechoic chamber).
\end_layout

\end_inset

 and a collection of host-computer-based
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

host-based
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

host computer
\begin_inset Quotes erd
\end_inset

 refers to stuff meant for your use on a 
\begin_inset Quotes eld
\end_inset

typical
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

personal computer
\begin_inset Quotes erd
\end_inset

, e.g.
 Octave/Matlab scripts.
\end_layout

\end_inset

 tools for data processing, manipulation and analysis.
 Only the former requires hardware construction, if you do not have a pre-built
 rig.
\end_layout

\begin_layout Standard
An implemented Array (i.e., any particular physical installation) is made
 up of groups of 4 microphones
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
or rather, up to 4 channels per node; unused channels are left floating;
 or better, grounded.
\end_layout

\end_inset

 Each group is orchestrated, at its heart, by a pair of small electronics
 boards, which we refer to here loosely as a BatStack or 
\shape italic
Stack
\shape default
.
 The Stack consists of an 
\series bold
MCU board
\series default

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
MicroController Unit.
\end_layout

\end_inset

, 
\series bold
memory board
\series default

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
also called 
\begin_inset Quotes eld
\end_inset

SRAM board
\begin_inset Quotes erd
\end_inset

 because it uses Static Random-Access Memory (in the current design).
\end_layout

\end_inset

, SD card holder, trigger interface, and channel header mini-board.
 The last three items exist exclusively as patchwork to older designs.
 New MCU and memory boards incorporating these and other improvements are
 under development.
 Each one of the four possible channels for a Stack uses an amplifier with
 attached microphone and a shielded cable for providing the amplifier with
 power and for receiving its analog measurements.
\end_layout

\begin_layout Standard
Before considering specific components, here is some general advice (similar
 in purpose to stuff in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "tips:sec"

\end_inset

).
 These are my opinion and, at times, intentionally unnecessarily polemic.
 
\end_layout

\begin_layout Itemize

\series bold
\shape italic
\size large
Wear safety glasses
\series default
\shape default
, at least, and follow other precautions and safety guidelines as appropriate.

\size default
 I do not care how experienced you are.
 This is a demand, not a suggestion.
\end_layout

\begin_deeper
\begin_layout Standard
Relatedly, after working with electronics stuff, you should wash your hands
 before eating, drinking or kissing.
\end_layout

\end_deeper
\begin_layout Itemize
You should assemble electronics in the order of increasing delicacy.
 When populating
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
i.e., 
\begin_inset Quotes eld
\end_inset

putting electrical parts on,
\begin_inset Quotes erd
\end_inset

 thus helping a PCB achieve its 
\shape italic
raison d'être
\shape default
.
\end_layout

\end_inset

 PCB, first make any mechanical changes necessary, such as smoothing corners
 or breaking a repeated print into individual pieces, if left uncut from
 the factory.
 Second, solder all passive parts, beginning with the most heat-tolerant
 and low-cost items
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Resistors and capacitors of standard values (e.g.
 1 k
\begin_inset Formula $\Omega$
\end_inset

, 
\begin_inset Formula $\frac{1}{4}$
\end_inset

 W, 1% tolerance) are very cheap.
\end_layout

\end_inset

.
 Finally, solder ICs
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
integrated circuit.
\end_layout

\end_inset

 in whatever order reduces heat exposure greatest, with preference given
 to those most sensitive.
\end_layout

\begin_deeper
\begin_layout Standard
My suggested order 
\shape italic
should be changed
\shape default
 depending on particular structural constraints.
 For example, attaching a cable header (which is very heat tolerant) before
 a small surface-mount IC (which is more delicate) may make soldering the
 latter impossible.
 The take-home message: 
\shape italic
plan ahead
\shape default
.
 Understand the whole assembly process before beginning any specific part.
\end_layout

\end_deeper
\begin_layout Itemize
Debugging later can be hell, so make note of potential weak points during
 an assembly job.
 These provide quick checkpoints while looking for problem sources later
 during testing.
 Be aware that damaging parts is often not a binary process; that is, a
 burnt op amp chip may show poor or decaying response over time in the field,
 despite initial decent performance.
\end_layout

\begin_layout Itemize
The most expensive single parts of the Array hardware are the microphones
 and the SRAM chips (or rather, the combined market value of a populated
 memory board --4 to 8 SRAM chips-- is high).
 Keep this in mind during construction.
\end_layout

\begin_layout Itemize
Include your precious time in cost considerations.
 Do not be afraid to simply throw away failed electronics, or rather, place
 them in the junk/spare parts box.
 Similarly, buying high quality equipment may be better than spending weeks
 hacking on mediocre tools from the 1970s.
\end_layout

\begin_layout Itemize
If you are soldering several rows of male header pins (0.1" spacing; generic),
 then I highly suggest you place them into something that matches the size
 of their target female socket
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This can be the target electronics, but be sure the latter can tolerate
 repeated exposure to soldering iron heat!
\end_layout

\end_inset

.
 Doing this is a good practice to be confident the completed parts will
 all fit together.
 Reflowing the solder later is unpleasant and may damage nearby components
 if the excessiv heat is not managed well.
 
\end_layout

\begin_layout Standard
We begin by describing construction of the microphone amplifier, in the
 sequel, followed by MCU and memory boards (with SD card holder and channel
 header) and concluding with the trigger input.
\end_layout

\begin_layout Subsubsection
Microphone amplifier
\end_layout

\begin_layout Standard
A parts list
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
known in the trade as a 
\begin_inset Quotes eld
\end_inset

bill of materials.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

 is provided in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "mic_parts:tbl"

\end_inset

 (in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "hardware:sec"

\end_inset

).
 Note that the listed package types
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
sometimes called 
\begin_inset Quotes eld
\end_inset

footprint.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

 are for the current board design, called 
\begin_inset Quotes eld
\end_inset

r2
\begin_inset Quotes erd
\end_inset

 for 
\begin_inset Quotes eld
\end_inset

release 2.
\begin_inset Quotes erd
\end_inset

 It is still undergoing some testing, but initial results are all good.
 Since the current boards have not yet been deployed, most construction
 and installation discussion concerns the previous design.
 To order parts for the previous (old) boards, buy the 
\shape italic
through-hole
\shape default
 counterparts to all passive components
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
i.e., resistors and capacitors.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
The purpose of the 
\begin_inset Quotes eld
\end_inset

amplifier
\begin_inset Quotes erd
\end_inset

 is to filter the signal coming from the attached electret microphone
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Electret microphones are essentially capacitors with a permanent charge
 distribution, such that movement in the plates causes changes in voltage
 across the plates.
\end_layout

\end_inset

.
 We currently expect Knowles FG-3629 microphones.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics
	filename figures/old_preamp_board.jpg
	width 5in

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset OptArg
status collapsed

\begin_layout Plain Layout
Previous (old) microphone amplifier
\end_layout

\end_inset

Previous (old) microphone amplifier.
 The microphone attaches to the left end of the board, and the power/signal
 cable to the right (at the white 3-pin header).
 If you look closely at the board where the microphone wires connect, there
 is a 
\begin_inset Quotes eld
\end_inset

--
\begin_inset Quotes erd
\end_inset

 to indicate ground, and a 
\begin_inset Quotes eld
\end_inset

+
\begin_inset Quotes erd
\end_inset

 to indicate the positive voltage supply.
 The middle wire carries the acoustic signal.
 Similarly, with respect to the orientation in the present photograph, the
 three pins on the cable header from top to bottom are external power supply
 (3.3V), signal and ground.
 Gain can be adjusted by turning the knob on the blue trimpot in the upper
 right corner of the photograph.
 See main text for additional details.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "oldpreamp:fig"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics
	filename figures/oldmicamp_board_break.jpg
	width 4in

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset OptArg
status collapsed

\begin_layout Plain Layout
How to break virgin amplifier boards
\end_layout

\end_inset

Example hand position for breaking a virgin amplifiers board (which has
 two copies of the amplifier circuit) into two pieces.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "oldpreamp_break:fig"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
To construct a new amplifier board, use an existing, built board as a reference
 and match components.
 An example is shown in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldpreamp:fig"

\end_inset

.
 A circuit schematic is presented in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "micamp_schem:fig"

\end_inset

.
 The current board requires several special considerations.
 
\end_layout

\begin_layout Itemize
To save on costs, amplifier circuit boards were shipped as pairs.
 That is, a virgin board actually contains two amplifier circuits
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This should be obvious from brief examination of a board.
\end_layout

\end_inset

.
 To facilitate separation (again, given limitations of low-cost), there
 is a straight mid-line of vias along which the board should be broken into
 two pieces (hence two amplifiers).
\end_layout

\begin_deeper
\begin_layout Standard
This can be achieved by the following steps.
 Cutting and breaking here will cause metal and FR-4
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://en.wikipedia.org/wiki/FR-4
\end_layout

\end_inset


\end_layout

\end_inset

 debris to fall.
 Please wear protective glasses and clean up after yourself.
 
\end_layout

\begin_layout Enumerate
With the inner sharp edge of pliers or with general-purpose workshop-grade
 cutters, make a small cut from each edge along this mid-line.
 
\shape italic
Aim to stay along the via hole centers.
\end_layout

\begin_layout Enumerate
Hold board with fingers mounted on board edges parallel to the midline (i.e.,
 the line of vias along which the board will be broken), and press your
 thumbs on the midline, as suggested in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldpreamp_break:fig"

\end_inset

.
\end_layout

\begin_layout Enumerate
Push your thumbs forward while curling your fingers back.
 The board will begin to break (listen for faint splitting sounds; FR-4
 is largely fiberglass, and yields sounds like what you might expect).
 Once some progress has been made, flip the board over and repeat from the
 other side.
 The idea is thus to break along the midline without damaging the nearby
 circuit.
\end_layout

\begin_layout Enumerate
Once the two pieces are separated, use pliers to pull out remaining metal
 vias (that had demarcated the mid-line).
 Smooth the now bumpy edge with a file to eliminate any sharp points (this
 doesn't require much filing, if any; the goal is only to erase dangerous,
 jagged protrusions; smooth bumps are OK).
\end_layout

\begin_layout Enumerate
Use a hot glue gun
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
you know, the kind from primary school 
\begin_inset Quotes eld
\end_inset

arts & crafts
\begin_inset Quotes erd
\end_inset

 class.
 It is non-toxic, easy to use, and hours of fun.
\end_layout

\end_inset

 to seal the edges along which you separated the amplifier boards, which
 you now have two of.
 The goal is to provide final assurance that the broken edge is cleanly
 covered and ready for application in the field, without fear of FR-4 bits,
 etc.
\end_layout

\begin_layout Enumerate
On the bottom edge of the example board in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldpreamp:fig"

\end_inset

, the results of the described splitting process can be seen.
 The non-linear translucent material along the edge is dried 
\begin_inset Quotes eld
\end_inset

hot glue
\begin_inset Quotes erd
\end_inset

, and the semi-yellow grating apparent beneath it are the stripped via holes.
 
\end_layout

\end_deeper
\begin_layout Itemize
The original circuit, for which the PCBs you are using were designed, included
 two trimpots
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
a type of variable resistor; probably in a small blue rectangular case with
 a metal adjustment knob.
 Use small flathead screwdriver to adjust.
 You can tell an extremum has been reached by listening for a faint click.
\end_layout

\end_inset

: one near the microphone attachment point (upper-left of Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldpreamp:fig"

\end_inset

) and the other near the power/signal cable header (upper-right of Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldpreamp:fig"

\end_inset

).
 The trimpot near the microphone has since been replaced with a fixed 100
\begin_inset space ~
\end_inset

k
\begin_inset Formula $\Omega$
\end_inset

 (
\begin_inset Formula $\leq$
\end_inset

1% tolerance, etc.) resistor.
 As usual, a potentiometer has three leads, and here we short two of them.
 Thus, when fitting the 100 k
\begin_inset Formula $\Omega$
\end_inset

 resistor into the trimpot's location, be aware that only two (out of three)
 positions are possible.
\end_layout

\begin_layout Itemize
Both high gain feedback paths require low Farad bypass capacitors.
 If you are looking down at the board such that the power/signal cable header
 is toward your right side and the microphone is toward your left (as in
 Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldpreamp:fig"

\end_inset

), then the two high gain steps are in the 
\end_layout

\begin_deeper
\begin_layout Enumerate
upper right, where the 100
\begin_inset space ~
\end_inset

k
\begin_inset Formula $\Omega$
\end_inset

 trimpot sits, and
\end_layout

\begin_layout Enumerate
upper left, where the 100
\begin_inset space ~
\end_inset

k
\begin_inset Formula $\Omega$
\end_inset

 permanent resistor was placed (see previous item).
 
\end_layout

\begin_layout Standard
In the assembled amplifier boards that you are (hopefully) using for reference,
 I placed a 68
\begin_inset space ~
\end_inset

pF ceramic capacitor in parallel with these resistors.
 The former requires attachment on the board's underside; I covered the
 protruding result with black electrical tape to prevent shorts
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\shape italic
Jargon:
\shape default
 a 
\begin_inset Quotes eld
\end_inset

short
\begin_inset Quotes erd
\end_inset

 is a very low Ohm (i.e.
 low resistance, e.g.
 a wire) connection between two nodes, typically assumed to be unintentional.
\end_layout

\end_inset

.
 The latter can be soldered in parallel on the topside; you can see the
 small blue capacitor near the far corner of the board, as in the Figure.
\end_layout

\end_deeper
\begin_layout Itemize
Many of the assembled amplifiers have a jumper on the microphone-end of
 the board, as on the left in the example shown in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldpreamp:fig"

\end_inset

 (hint: the jumper is gray).
 This was added originally to facilitate experimenting with different offset
 voltages
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This is a single-supply design; hence, our signal of interest rides on a
 DC offset voltage --sometimes called the 
\begin_inset Quotes eld
\end_inset

virtual ground
\begin_inset Quotes erd
\end_inset

-- midway between the power rails.
\end_layout

\end_inset

.
 While constructing new boards, you can safely make this jump permanently
 connected with a 
\series bold
short
\series default
 piece of 
\series bold
thick
\series default
 wire.
\end_layout

\begin_layout Itemize
In assembled boards you will see some unused pin holes.
 In particular, these are 
\end_layout

\begin_deeper
\begin_layout Itemize
two large holes for mounting the amplifier in your experimental setup, that
 are not a part of the circuit;
\end_layout

\begin_layout Itemize
an extra pair of component holes near the power/signal cable header, which
 allow a second tank capacitor to be placed in parallel with the present
 one (cf.
 mid-right of photo in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldpreamp:fig"

\end_inset

); and
\end_layout

\begin_layout Itemize
two unused resistor positions near the microphone (lower-left of Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldpreamp:fig"

\end_inset

)
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
These are to facilitate experimenting with different power supply values,
 which informal tests for 5
\begin_inset space ~
\end_inset

V suggest not to improve SNR (signal-noise ratio).
\end_layout

\end_inset

.
 See Sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "hardware:sec"

\end_inset

 for details.
 
\end_layout

\end_deeper
\begin_layout Subsubsection
MCU and memory boards
\end_layout

\begin_layout Standard
In the current release, there are three PC boards
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Printed Circuit Board, PCB.
\end_layout

\end_inset

 and two custom components that make up a single Stack.
 These are 
\end_layout

\begin_layout Enumerate
MCU board (cf.
 Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:fig"

\end_inset

),
\end_layout

\begin_layout Enumerate
memory board (cf.
 Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmem:fig"

\end_inset

),
\end_layout

\begin_layout Enumerate
headers for amplifier power/signal cables (not depicted in a figure),
\end_layout

\begin_layout Enumerate
SD card holder (also not depicted in a figure), and
\end_layout

\begin_layout Enumerate
trigger input.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics
	filename figures/old_mcu_board.jpg
	width 100text%

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset OptArg
status collapsed

\begin_layout Plain Layout
Current microcontroller board
\end_layout

\end_inset

Current MCU board.
 Grossly, the dsPIC33F chip breakout (cf.
 Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "mikropic:fig"

\end_inset

) attaches on top on the right, and the memory board (cf.
 Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmem:fig"

\end_inset

) attaches underneath.
 Power supply is provided via the black jack in the upper-left corner.
 Various patches are visible (e.g., scratched off trace and heat-shrink-covered
 jumper in mid-left region).
 Note that 
\shape italic
this is a complete, populated board
\shape default
; i.e., exposed holes are for uncessary parts.
 See main text for details.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "oldmcu:fig"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics
	filename figures/old_mem_board.jpg
	width 100text%

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset OptArg
status collapsed

\begin_layout Plain Layout
Current memory board
\end_layout

\end_inset

Current memory (or 
\begin_inset Quotes eld
\end_inset

SRAM
\begin_inset Quotes erd
\end_inset

) board.
 Four SRAM chips can be seen on the left; buffer chip and mount point on
 the right.
 See main text for details.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "oldmem:fig"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics
	filename figures/mikro_dspic_breakout.jpg
	width 2.5in

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset OptArg
status collapsed

\begin_layout Plain Layout
MikroElektronika dsPIC33F breakout LV 24-33 board
\end_layout

\end_inset

LV 24-33 dsPIC33FJ128GP710 (100-TQFP) breakout, includes 10
\begin_inset space ~
\end_inset

MHz crystal; mfg.
 by MikroElektronika (company website: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.mikroe.com
\end_layout

\end_inset

).
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "mikropic:fig"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Once again, constructing the MCU and memory boards is largely a cloning
 job: simply make new boards that are functionally identical (within component
 manufacturing tolerances) to existing, populated boards.
 A circuit schematic is presented in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "mcubrd_schem:fig"

\end_inset

 (you will need to 
\begin_inset Quotes eld
\end_inset

zoom in
\begin_inset Quotes erd
\end_inset

 to view detail).
 An example complete MCU board --sans dsPIC33F chip breakout
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\shape italic
Jargon:
\shape default
 a 
\begin_inset Quotes eld
\end_inset

breakout board
\begin_inset Quotes erd
\end_inset

 essentially provides access to pins in a manner different from that available
 on the manufactured package; usually to 
\begin_inset Quotes eld
\end_inset

break out
\begin_inset Quotes erd
\end_inset

 means to make more easily accessible for development and debugging, though
 with corresponding costs incurred for space usage, introduction of various
 noise types, etc.
 However, a breakout board may provide additional components, such as that
 of the dsPIC33F shown in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "mikropic:fig"

\end_inset

.
\end_layout

\end_inset

-- is shown in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:fig"

\end_inset

; the prominent socket holds the dsPIC33FJ128GP710 chip breakout, shown
 in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "mikropic:fig"

\end_inset

.
 An example complete memory board is given in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmem:fig"

\end_inset

.
\end_layout

\begin_layout Standard
Admittedly, the existing, built MCU boards vary some in their appearance.
 The one in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:fig"

\end_inset

 looks to be missing some parts, and includes several jumped wires (e.g.,
 along the top left, near the 
\begin_inset Formula $3.3$
\end_inset

V voltage regulator).
 This is due to evolution of the design, and related hardware patches.
 Until a new design ships
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Scott is still working on these; please contact about collaboration if intereste
d.
\end_layout

\end_inset

, you will need to apply these patches manually
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
small changes can be applied to the current MCU board layout to effectively
 induce these patches permanently.
 This is appropriate if you need expediency; look in the BatStack sourcetree
 under 
\family typewriter
hardware/archived
\family default
 for corresponding ExpressPCB (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://expresspcb.com/
\end_layout

\end_inset

) layout files.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "hardware:sec"

\end_inset

 for details.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
We mention here the patches and other noteworthy items for construction
 of the MCU board.
 All references to 
\begin_inset Quotes eld
\end_inset

the Figure
\begin_inset Quotes erd
\end_inset

 are for Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:fig"

\end_inset

, and 
\begin_inset Quotes eld
\end_inset

the example board
\begin_inset Quotes erd
\end_inset

 (or simply, 
\begin_inset Quotes eld
\end_inset

the board
\begin_inset Quotes erd
\end_inset

) is regarding what is shown in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:fig"

\end_inset

.
 For more general design discussion, see Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:sec"

\end_inset

.
 If some trace pathways are confusing, looking at the old and slightly different
 layout in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu_layout:fig"

\end_inset

 may be helpful because top and bottom layers are simultaneously visible.
 
\end_layout

\begin_layout Itemize
The example board is 
\shape italic
minimally populated
\shape default
, in that only crucial components --aside from the red LED (power indicator),
 which is helpful but not necessary-- are present.
\end_layout

\begin_layout Itemize
Despite the labeling, the ICSP
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
In-Circuit System Programming.
\end_layout

\end_inset

 port (in the lower right region of board) is in a non-standard configuration.
 Confer Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:sec"

\end_inset

.
\end_layout

\begin_layout Itemize
The red-insulated jumper wire near the power supply is necessary because
 a 5
\begin_inset space ~
\end_inset

V voltage regulator previously provided a bridge between the external supply
 and the 3.3
\begin_inset space ~
\end_inset

V regulator (in addition to supplying 5
\begin_inset space ~
\end_inset

V for some parts of the Stack that needed it); the 5
\begin_inset space ~
\end_inset

V regulator has since been removed from the design, so we bridge the gap
 with a jumper wire, thus providing the external supply directly to the
 3.3
\begin_inset space ~
\end_inset

V regulator.
\end_layout

\begin_layout Itemize
Becoming visible from the middle-lower edge of the 3.3V regulator chip, there
 is a trace which must be broken, i.e.
 physically scratched off to break the electrical connection.
 This is apparent in the Figure, where my scratch marks can be seen as slightly
 more-white-than-yellow, relatively to nearby PCB.
 This is important and 
\shape italic
must be done before providing power to the assembled board
\shape default
.
 Otherwise, parts may burn.
\end_layout

\begin_layout Itemize

\series bold
The following only applies to some MCU boards.

\series default
 We expect to trigger on a rising edge --or more accurately, a pulse from
 a baseline of 0
\begin_inset space ~
\end_inset

V-- and hence, the corresponding pin of the dsPIC33F chip should be pulled
 down.
 Recent MCU boards
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
there should not be many remaining, as I recall.
\end_layout

\end_inset

 are designed for the converse, i.e.
 trigger on pulse to 0 from baseline of 3.3
\begin_inset space ~
\end_inset

V.
 To fix this, 
\end_layout

\begin_deeper
\begin_layout Enumerate
solder the pull-down resistor (e.g.
 4.7
\begin_inset space ~
\end_inset

k
\begin_inset Formula $\Omega$
\end_inset

) on one end to the lower hole between the two green LED 330 resistors;
\end_layout

\begin_layout Enumerate
place a small diameter piece of heat-shrink tubing
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
insulating tubing that shrinks (hence, tightening, fitting snugly) in response
 to hot air.
\end_layout

\end_inset

 over the floating leg of the pull-down resistor
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
the goal with insulation here is to prevent unintentional electrical contact.
\end_layout

\end_inset

; and
\end_layout

\begin_layout Enumerate
solder the exposed leg end to the ground lead (bottom-left pin in the Figure)
 of the 3.3
\begin_inset space ~
\end_inset

V regulator.
 
\end_layout

\begin_layout Standard
Now the trigger-detecting pin of the dsPIC33F is pulled to ground (i.e.
 
\begin_inset Quotes eld
\end_inset

GND
\begin_inset Quotes erd
\end_inset

 or 0
\begin_inset space ~
\end_inset

V) until a trigger signal arrives, which drives the pin high briefly.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\shape italic
Design note:
\shape default
 pulling nodes down or up is way to stabilize their value and facilitate
 bus communications, among other things.
 Here we use it to ensure the dsPIC33F firmware will, in the absense of
 a signal, not see any jitter on the trigger line.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
On the underside of the current MCU board (not visible in the Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:fig"

\end_inset

), there should be an insulated, thick and as-direct-as-possible wire connecting
 the supply voltage pin of the SD card/SPI
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Serial Peripheral Interface.
\end_layout

\end_inset

 header (left edge of Figure) to the 3.3
\begin_inset space ~
\end_inset

V source.
 As with all power-related connections, be sure to verify your assembly
 before connecting the external supply.
 Shorting a power connection can cause worse things than a burnt chip to
 happen.
\end_layout

\begin_layout Itemize
There are two (or more?! I only remember two\SpecialChar \ldots{}
) small SMD
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Surface Mount Device; also, surface mount technology (SMT).
\end_layout

\end_inset

 caps
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\shape italic
Jargon:
\shape default
 
\begin_inset Quotes eld
\end_inset

caps
\begin_inset Quotes erd
\end_inset

 are capacitors.
\end_layout

\end_inset

 in use here.
 First is near the left side of board (immediate left of 330 resistor of
 leftmost LED in Figure) and conditions the Reset button (or rather, the
 trace to the !MCLR pin).
 Second is on bottom side of board, just under the MCP6024 quad op amp chip
 (near middle of Figure), and is the supply cap
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Supply capacitors (also called 
\begin_inset Quotes eld
\end_inset

decoupling
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

bypass
\begin_inset Quotes erd
\end_inset

 capacitors) serve several purposes, most notably providing a local, low-inducta
nce current source.
 A good tutorial is published by Cypress Semiconductor: 
\begin_inset Quotes eld
\end_inset

SRAM System Design Guidelines
\begin_inset Quotes erd
\end_inset

 (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.cypress.com/?docID=4396
\end_layout

\end_inset

).
\end_layout

\end_inset

 for this IC.
 
\end_layout

\begin_layout Standard
Compared to the work described above, assembling more memory boards is entirely
 straightforward but very tedious.
 Indeed, if you have little experience with fine soldering or mounting SMD
 components, then populating these boards will be painful.
 To avoid writing a tutorial on surface mount soldering technique
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
you can learn by practicing on junk electronics, or a known bad chip that
 can be soldered and reflowed repeatedly so that you build confidence over
 the whole process.
 There are probably written and video tutorials on the Web, but I have no
 recommendations.
\end_layout

\end_inset

, I instead list some advice specific to our task and some general soldering
 tips.
 (The latter includes some repeats from earlier, Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "construct:sec"

\end_inset

.) 
\end_layout

\begin_layout Itemize
Make a plan of attack.
 With surface mount work --more so than through-hole-- you will find it
 critical to solder some chips before others.
 You need plenty of space for reliable soldering, and this typically means
 bulky passives should be added later.
\end_layout

\begin_deeper
\begin_layout Standard
For the task at hand, I recommend the following order.
 
\end_layout

\begin_layout Enumerate
SRAM chips, completing each one before the next and paying attention to
 where pin 1 is positioned
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
i.e.
 match the small dot in the corner when copying from a populated example
 board.
\end_layout

\end_inset

;
\end_layout

\begin_layout Enumerate
SMD (size is 0805?) pull down resistors and decoupling caps along left side
 of Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmem:fig"

\end_inset

;
\end_layout

\begin_layout Enumerate
quad buffer chip (in mid-left of Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmem:fig"

\end_inset

);
\end_layout

\begin_layout Enumerate
resistor arrays (SIP
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Single In-line Package.
\end_layout

\end_inset

), paying attention to properly position the black orienting dots
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
there is one on each SIP, similar to IC packages.
\end_layout

\end_inset

;
\end_layout

\begin_layout Enumerate
male header (0.1" spacing) pins -- I 
\shape italic
strongly
\shape default
 advise soldering these while a populated MCU board is attached; doing so
 gaurantees a snug fit
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\SpecialChar \ldots{}
sometimes very snug, but workable.
\end_layout

\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
To reduce the risk of overheating the IC packages, you should pause occasionally.
 Actually, taking rest breaks is a good practice to avoid making silly mistakes,
 which result from fatigue.
\end_layout

\begin_layout Itemize
For soldering SMT, you should become very comfortable using liquid solder
 flux, whether from a brush pen or a jar
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
In both cases, be careful not to leave the cap off for too long.
 In fact if you're using a jar of liquid flux, I recommend leaving the cap
 loosely on while working and only lifting it to get a few drops as needed.
\end_layout

\end_inset

.
 It is easy to clean up, e.g.
 with ethyl alcohol that is readily available in a wet lab.
 And it causes a wicking effect, which is important when soldering many
 small leads as you are here.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
I often use the flux-and-surface-tension approach to SMD soldering: apply
 a droplet of flux to the pad and device lead, place a small glob of solder
 at the iron tip end, and lower the solder bulb to the lead-pad interface
 till the solder is wicked between, creating a bond.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Similar to liquid flux, copper braid is an excellent way to cleanly remove
 excess solder.
 My technique (and this will burn your hands a little) is to create a loop
 of prepared copper braid and place the soldering iron tip inside it, like
 a hot dog sandwhich.
 You may then lower these to the excess solder and wick up the amount you
 desire.
 In particular, if you bridge two or more legs on the SMD package
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\shape italic
Jargon:
\shape default
 
\begin_inset Quotes eld
\end_inset

bridging
\begin_inset Quotes erd
\end_inset

 occurs when two leads are unintentionally soldered together, hence, creating
 an unwanted conductive bridge between them.
\end_layout

\end_inset

, then applying liquid flux and then pressing (
\series bold
briefly!
\series default
) the braid-and-iron-tip against them will cause some solder to wick to
 leads and pads as desired and excess solder to be pulled into the braid.
 This trick must be performed quickly to avoid overheating the chip, which
 can happen here quite easily because multiple leads are contacting the
 soldering iron simultaneously.
\end_layout

\begin_layout Itemize
There is a small tool for checking SRAM chips
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
or more commonly, verifying that your soldering job was successful.
\end_layout

\end_inset

, called 
\family typewriter
memcheck
\family default
, and located in the BatStack sourcetree under 
\family typewriter
src/util
\family default
.
 You should run this after each memory board is completed to determine if
 any mistakes were made.
 See Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "misctools:sec"

\end_inset

 for details.
 
\end_layout

\begin_layout Standard
For this subsection, it remains only to select an external power supply,
 and build an SD card holder and what has been referred to as the 
\begin_inset Quotes eld
\end_inset

amplifier cable header board
\begin_inset Quotes erd
\end_inset

, or possibly 
\begin_inset Quotes eld
\end_inset

cable header breakout.
\begin_inset Quotes erd
\end_inset

 The latter provides an interface between the old MCU board header and the
 3-pin connector used by current microphone amplifiers.
 See Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:sec"

\end_inset

 for details.
 Construction of the breakout is the easiest step because it consists of
 only connector-like components, which are very heat tolerant.
 To populate a board, simply use an existing, built one for cloning reference.
 Note that we again bought these boards as multiple copies per manufactured
 board
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
as for the microphone amplifiers that you have worked with; see above for
 explanation.
\end_layout

\end_inset

.
 Thus you will need to follow an entirely similar process to split along
 the via-demarcated lines, to smooth sharp edges and to add hot glue for
 sealant.
\end_layout

\begin_layout Standard
Building an SD card holder is a little tricky, but it looks more so than
 it really is because there is not a dedicated PCB to ease the assembly
 process.
 I have not designed a PCB for this purpose as I intend to either change
 to a different type of local bulk storage or integrate the card holder
 into a single MCU board.
 As an aside, if it does not matter for your purposes, and you decide to
 roll your own SD card holder, then please consider contributing your design
 to the BatStack project.
\end_layout

\begin_layout Standard
As per the specification
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
SD Card Specifications v2.00 : 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.sdcard.org/developers/tech/sdcard/pls/Simplified_Physical_Layer_Spec.pdf
\end_layout

\end_inset

; v1.9 : 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.cs.ucr.edu/~amitra/sdcard/ProdManualSDCardv1.9.pdf
\end_layout

\end_inset


\end_layout

\end_inset

, and in particular to facilitate our communication with the card over a
 SPI bus, the SD card holder serves the purposes of 
\end_layout

\begin_layout Itemize
providing power to the SD card,
\end_layout

\begin_layout Itemize
placing a decoupling cap (0.1
\begin_inset space ~
\end_inset


\begin_inset Formula $\mu$
\end_inset

F or so) near the supply leads of the card,
\end_layout

\begin_layout Itemize
pulling up the MISO, MOSI and SS lines
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
See Table
\begin_inset space ~
\end_inset

3-2 and Figure
\begin_inset space ~
\end_inset

3-3 in the specs document v1.9.
 These 
\shape italic
might
\shape default
 be on pages
\begin_inset space ~
\end_inset

27 and 30, respectively, of the PDF file.
\end_layout

\end_inset

, and
\end_layout

\begin_layout Itemize
actually connecting the SPI-bus-related pins of the dsPIC33F chip (on our
 MCU board) to the SD card.
 
\end_layout

\begin_layout Standard
On the left side of Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:fig"

\end_inset

 there is a 5
\begin_inset Formula $\times$
\end_inset

2 (0.1" spacing) header to which the SD card holder connects.
 Pin labels are provided in Table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "old_sdspi_hdr:tbl"

\end_inset

 of Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:sec"

\end_inset

, where the orientation matches that in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:fig"

\end_inset

 (i.e., pin 1 is the upper-leftmost).
\end_layout

\begin_layout Standard
To construct a new SD card holder for use with a BatStack, it may suffice
 to say that you can glue a new SD card slot
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\SpecialChar \ldots{}
I am not sure what to call these.
 In other words, the 
\shape italic
actual
\shape default
 card holder that provides manageable leads for accessing the pads on the
 card itself, and usually has some click/lock mechanism to secure the card
 in place once inserted.
\end_layout

\end_inset

 onto perfboard
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
or Radio Shack's famous and cheap PCB with trace layout matching that of
 standard breadboards; catalog number 276-170, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.radioshack.com/product/index.jsp?productId=2102846
\end_layout

\end_inset


\end_layout

\end_inset

.
 You then add a decoupling cap, three pull-up resistors, and a ribbon cable
 to 5
\begin_inset Formula $\times$
\end_inset

2 female connector, as noted above.
 As with most of the construction process, you must verify power supply
 connections before powering the Stack.
 In this context, that means confirming that the Vdd (3.3
\begin_inset space ~
\end_inset

V) and GND pins on the SD card SPI header lead to corresponding pads on
 the inserted SD card.
 Note further that you would not see the failure in an implemented system
 until a card is inserted.
\end_layout

\begin_layout Standard
The positive supply voltage for an entire BatStack is 3.3
\begin_inset space ~
\end_inset

V, as provided by the voltage regulator (cf.
 parts list in Table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "mcu_parts:tbl"

\end_inset

).
 The device currently implemented is rated for a maximum current draw 
\begin_inset Quotes eld
\end_inset

in excess of
\begin_inset Quotes erd
\end_inset

 800
\begin_inset space ~
\end_inset

mA
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
though please re-read the device datasheet before pulling this much current
 as further verification.
 The moments spent checking this are much briefer than those spent repairing
 a board or populating a new one.
\end_layout

\end_inset

.
 The rated supply input voltage is 
\shape italic
at most
\shape default
 20
\begin_inset space ~
\end_inset

V
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
indeed, this is from stress-testing and should not really be used in practice.
\end_layout

\end_inset

, but from experience, I suggest between 5 and 9
\begin_inset space ~
\end_inset

V DC.
 With an appropriate connecter --i.e.
 one that matches the power jack on the MCU board-- you could use a battery,
 e.g.
 standard 9
\begin_inset space ~
\end_inset

V, or a wall-wart
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\shape italic
Jargon:
\shape default
 a 
\begin_inset Quotes eld
\end_inset

wall wart
\begin_inset Quotes erd
\end_inset

 is an AC-DC converter, sometimes called a 
\begin_inset Quotes eld
\end_inset

power adapter
\begin_inset Quotes erd
\end_inset

, which plugs into standard mains power outlets.
 Most modern handheld electronics toys, such as your cell phone, ship with
 these for charging internal batteries.
\end_layout

\end_inset

 
\shape italic
that can comfortably provide enough current
\shape default
.
 Expect a BatStack with four microphone and amplifier boards attached, etc.,
 to require about 90
\begin_inset space ~
\end_inset

mA up to 160
\begin_inset space ~
\end_inset

mA, depending on mode of operation.
 Whatever source you select, keep the following tips in mind.
 
\end_layout

\begin_layout Itemize
Drawing from mains power lines introduces obvious fundamental noise at approx.
 60
\begin_inset space ~
\end_inset

Hz in the USA (50
\begin_inset space ~
\end_inset

Hz in Europe?).
 Additionally, high frequency and non-periodic noise sources may appear,
 depending on the building you are in, what other equipment is also using
 mains power nearby, etc.
\end_layout

\begin_layout Itemize
Batteries have finite charge available, hence a BatStack will run for finite
 time before requiring a change.
 Please consider this when planning your experiment to avoid dead batteries
 in the midst of your work.
 At the very least, always keep extra batteries on-hand.
\end_layout

\begin_layout Itemize
Though small commodity batteries can certainly be dangerous, 
\shape italic
mains power is very dangerous.

\shape default
 Please be very careful if you go the wall-wart route.
\end_layout

\begin_layout Itemize
To avoid biasing you to use batteries, I state explicitly here that powering
 from mains allows you to keep BatStacks running indefinitely, hence (potentiall
y) one less worry during your experiments.
 Further, if you connect the AC-DC adapters to one or two
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
or more, depending on number of channels; again, be safe!
\end_layout

\end_inset

 power strip surge protectors, then turning the Array 
\begin_inset Quotes eld
\end_inset

on
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

off
\begin_inset Quotes erd
\end_inset

 is easy.
 
\end_layout

\begin_layout Subsubsection
Triggering
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "triggering:sec"

\end_inset


\end_layout

\begin_layout Standard
An external trigger source is required to synchronously start recording
 across all Array hardware.
 The original MCU board design includes a single 
\begin_inset Quotes eld
\end_inset

trigger button
\begin_inset Quotes erd
\end_inset

 whereby one may start a trial recording without such an external source.
 Operation by push button and remote source is similar: the dsPIC33F pin
 (RC1) is pulled down to ground (GND) in the steady state and set to high
 (3.3
\begin_inset space ~
\end_inset

V) for triggering.
\end_layout

\begin_layout Standard
Thus we expect from an external source a single-wire voltage signal that
 is normally at 0
\begin_inset space ~
\end_inset

V (i.e.
 ground) and triggers by briefly
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
at least for 30
\begin_inset space ~
\end_inset

ms or so, but this depends on a variety of setup-dependent factors.
\end_layout

\end_inset

 switching to a positive voltage at approx.
 3.3
\begin_inset space ~
\end_inset

V.
 In other words, we expect a 
\begin_inset Quotes eld
\end_inset

TTL pulse
\begin_inset Quotes erd
\end_inset

, though full conformance to that standard may not be achieved.
 Each Stack interfaces with the (shared) trigger line via a simple NPN BJT
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Bipolar Junction Transistor.
\end_layout

\end_inset

 and resistor combination.
 This can be seen on the left side of Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "mcubrd_schem:fig"

\end_inset

.
 The basic idea is to buffer the path from the trigger line (shared by all
 devices using the same trigger source) to the dsPIC33F chip.
 This is achieved by the high impedance provided at the BJT base terminal.
 The 4.7
\begin_inset space ~
\end_inset

k
\begin_inset Formula $\Omega$
\end_inset

 pull-down resistor, which connects the BJT emitter terminal to ground,
 pulls the input pin of the dsPIC33F chip down to ground (hence the name)
 when there is no trigger signal.
 An arriving trigger signal (i.e., a pulse with positive magnitude at the
 supply level, 3.3
\begin_inset space ~
\end_inset

V) effectively turns the transistor 
\begin_inset Quotes eld
\end_inset

on
\begin_inset Quotes erd
\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This is a gross simplification but suffices for the tutorial.
\end_layout

\end_inset

 and drives the emitter voltage to near 3.3
\begin_inset space ~
\end_inset

V, which the dsPIC33F chip then detects.
\end_layout

\begin_layout Standard
Since the original MCU board design was not intended to accept an external
 trigger, there is no designated part of the PC board for attaching the
 BJT and its pull-down resistor.
 Until the new design is complete, you must find some other way to connect
 the trigger interface.
 I have found extra holes on the SD card holder as a convenient location
 for this.
 In any case, the emitter wire of the BJT must connect to the left pin of
 the 2-pin (0.1" spacing) piece in the lower-left of Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:fig"

\end_inset

.
 This pin (as suggested in the image of old layout in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu_layout:fig"

\end_inset

) has a path directly to the input lead of the dsPIC33F chip that actually
 detects the trigger signal.
\end_layout

\begin_layout Subsection
Setup and tests
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "setup:sec"

\end_inset


\end_layout

\begin_layout Subsubsection
Mic amp validation
\end_layout

\begin_layout Standard
There are two types of tests you can run, depending on the level of confidence
 you wish to have before attempting to record from a completed BatStack.
 First we may simply verify that the amplifier (with microphone
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Henceforth whenever referring to an 
\begin_inset Quotes eld
\end_inset

amplifier,
\begin_inset Quotes erd
\end_inset

 we assume there is a microphone attached unless stated otherwise.
\end_layout

\end_inset

) responds reasonably to ultrasound, from a largely uncharacterized source.
 Second we may play tones of known frequencies (or more generally, any known
 ultrasonic signal) and verify that the output of the amplifier is appropriate\SpecialChar \ldots{}

 not necessarily flat, but with fairly bounded variation
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Later, the purpose of gain calibration is precisely to account for differences
 among microphone channels; a critical step for meaningful data analysis.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
We describe the first, small test, the steps for which are necessary for
 the more involved second (optional) test.
 On the right side of Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldpreamp:fig"

\end_inset

 there is 3-pin (white-colored) male header.
 From top-most pin to bottom, their significance is positive voltage supply
 (3.3
\begin_inset space ~
\end_inset

V), our signal of interest, and ground (or 
\begin_inset Quotes eld
\end_inset

GND
\begin_inset Quotes erd
\end_inset

; 0
\begin_inset space ~
\end_inset

V).
 To run an amplifier, it suffices to provide a 3.3
\begin_inset space ~
\end_inset

V DC
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
direct current; i.e.
 not varying with time (ideally).
\end_layout

\end_inset

 supply across the first and third pins, and then measure the output at
 the center pin using an oscilloscope probe.
 Any sound source with some ultrasonic content will do, excepting extremely
 low (mosquito) or high (jet plane) pressure variations.
 E.g., jingle your keys or clap your hands about 20
\begin_inset space ~
\end_inset

cm from the microphone.
 Note that some of these sample sources are very brief, so it may be necessary
 to have your oscilloscope configured for capture-on-threshold, single-triggerin
g or similar setting.
\end_layout

\begin_layout Standard
In case an external 3.3
\begin_inset space ~
\end_inset

V DC supply is not readily available, you may use the supply provided by
 the MCU board of a BatStack.
 To do so, connect the amplifier as it would be for recording, power 
\begin_inset Quotes eld
\end_inset

on
\begin_inset Quotes erd
\end_inset

 the BatStack, and then touch the oscilloscope probe to one of the mic
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\shape italic
Jargon:
\shape default
 
\begin_inset Quotes eld
\end_inset

mic
\begin_inset Quotes erd
\end_inset

 is 
\begin_inset Quotes eld
\end_inset

microphone
\begin_inset Quotes erd
\end_inset

.
 A variant is 
\begin_inset Quotes eld
\end_inset

mike
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset

 channel traces, or fix the probe on an exposed amplifier output signal
 if you can find one.
 Though most ground references can be used, a particularly convenient one
 is the right-most pin of the ICSP header (cf.
 Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:sec"

\end_inset

).
\end_layout

\begin_layout Standard
A more detailed test is accomplished by playing a known ultrasound source
 to the microphone-amplifier and studying the resulting output, whether
 on an oscilloscope (
\begin_inset Quotes eld
\end_inset

live
\begin_inset Quotes erd
\end_inset

) or recorded, whence you may perform more detailed analyses, such as spectral
 plots or spectrograms.
 For example, a somewhat fast and fairly good test is to mount an ultrasonic-cap
able speaker on a tripod
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\SpecialChar \ldots{}
you know, as used for photography.
\end_layout

\end_inset

 at some known distance from the microphone and amplifier, which are mounted
 on another tripod or, otherwise, secure structure.
 A function generator may then be used to vary the frequency of a sine waveform
 played through the speaker.
 Note that, though the generator may provide constant amplitude output across
 the spectrum, 
\shape italic
the speaker playing the tone almost surely does not have a flat response.

\shape default
 With this setup --and an oscilloscope attached to the amplifier output
 as described above-- it is possible to quickly vary frequency and (less
 reliably) intensity input and examine the frequency, magnitude, and noise
 or distortion of the amplifier output.
 The tripod may also be moved such that the angle of incidence between the
 source and receiver is varied.
\end_layout

\begin_layout Standard
Being after all a tutorial section, here is another trick for working with
 amplifiers.
 An elementary result of acoustics (or more generally, waves) is that higher
 frequencies are more directional.
 This effect is quite pronounced at ultrasonic frequencies that we are consideri
ng (10
\begin_inset space ~
\end_inset

kHz to 120
\begin_inset space ~
\end_inset

kHz).
 It is also an elementary result that an ideal piston source has a beam
 pattern with a prominent central lobe
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
See 
\begin_inset Quotes eld
\end_inset

Acoustics
\begin_inset Quotes erd
\end_inset

 (1950-ish?) by Beranek.
\end_layout

\end_inset

, which is normal to the surface of the piston, or speaker.
 Thus if you wish to record from a speaker
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
which we assume behaves similarly to an ideal piston, with or without baffle
 depending on your rig.
\end_layout

\end_inset

, then the following steps provide a means to find the beamaxis
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
We define the 
\begin_inset Quotes eld
\end_inset

beamaxis
\begin_inset Quotes erd
\end_inset

 to be the axis --or angle of incidence-- at which peak intensity is achieved,
 given a fixed radius from the source.
 This is not necessarily unique.
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Enumerate
If it is not already, mount the amplifier to a fixed structure.
 This can be in your intended experimental setup, or something easy and
 temporary, e.g.
 a tripod.
\end_layout

\begin_layout Enumerate
Mount the (ultrasonic-capable) speaker on a tripod or some stand that allows
 movement in pitch and yaw.
 Be sure you can move the speaker without touching the speaker itself, e.g.
 using handles on the tripod stand.
\end_layout

\begin_layout Enumerate
Measure the input to the speaker and the output of the amplifier with an
 oscilloscope.
 BNC T-connectors/joints are a quick way to split off the line and connect
 to an oscilloscope input.
 Alligator clips or similar are handy for securing the probe.
\end_layout

\begin_layout Enumerate
While moving the tripod or speaker as necessary to achieve a desired speaker-mic
rophone distance
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
The distance used depends on your goals.
 In all cases, be sure to stay in the 
\begin_inset Quotes eld
\end_inset

far field
\begin_inset Quotes erd
\end_inset

\SpecialChar \ldots{}
 unless you are interested in near-field effects.
\end_layout

\end_inset

, try to aim the speaker at the microphone (again, which we assume is married
 to an amplifier).
 Don't waste too much time here -- just try roughly.
\end_layout

\begin_layout Enumerate
Using a function generator
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
or some other signal source; this is easiest and most general if you can
 control the amplitude and frequency of a sinusoid (i.e.
 a 
\begin_inset Quotes eld
\end_inset

tone
\begin_inset Quotes erd
\end_inset

).
\end_layout

\end_inset

, play a tone frequency, e.g.
 35
\begin_inset space ~
\end_inset

kHz, into the speaker and increase the amplitude until you see it on the
 amplifier (as measured by the oscilloscope).
 As always, 
\shape italic
please be careful when generating sounds
\shape default
.
 Wearing ear protection is prudent -- at least have a contingency plan if
 something fails and piercing sound is unleashed.
\end_layout

\begin_layout Enumerate
Now, slowly change pitch and yaw of the speaker until you find the orientation
 that causes the peak-to-peak amplifier output to be maximum.
 Note that there are local maxima
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
so called 
\begin_inset Quotes eld
\end_inset

side lobes.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

.
 You must not manipulate the output amplitude of the function generator
 during this step.
 The result of this last step is to have the beamaxis directed at the microphone.
 
\end_layout

\begin_layout Standard

\series bold
N.B.,
\series default
 The final output of the amplifier board is from an 
\shape italic
unloaded
\shape default
 unity gain follower.
 That is, you should consider attaching something before examining the output,
 or at least recognize this as a potential source of inappropriate behavior.
 If you decide to load it, an easy example is a series 1
\begin_inset space ~
\end_inset


\begin_inset Formula $\mu$
\end_inset

F capacitor followed by a 47
\begin_inset space ~
\end_inset

k
\begin_inset Formula $\Omega$
\end_inset

 or so resistor in parallel to pull the offset to your desired level.
 Note also that I have not had trouble in this matter, while testing an
 unloaded amplifier output.
\end_layout

\begin_layout Subsubsection
Firmware Installation
\end_layout

\begin_layout Standard

\shape italic
Currently you must reprogram each Stack to change the local address and
 any configuration options, e.g.
 trigger-type.

\shape default
 This will change soon.
 Feeding Scott with coffee may expedite the process.
\end_layout

\begin_layout Standard
We assume that you already have a working toolchain, i.e.
 that you can compile for the target chip family dsPIC33F.
 If not, or otherwise for details, see Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "createbuildenv:sec"

\end_inset

.
\end_layout

\begin_layout Standard
The main source code file
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
In the sense that the program entry point, labelled 
\family typewriter
main
\family default
, is there.
\end_layout

\end_inset

 is located in the BatStack sourcetree at 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\end_inset

 src/firmware/main.c 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset

 In the same directory (i.e.
 
\family typewriter
src/firmware
\family default
), is the firmware Makefile.
 You may need to change this slightly according to your setup.
 Near the top of the Makefile, the base directory for your PIC C30 compiler
 installation must be specified.
 For example, if you installed it under your home directory, in 
\family typewriter
opt
\family default
, and if your username is 
\family typewriter
frodo
\family default
, then use something like 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\end_inset

 BASEDIR=/home/frodo/opt/picC30 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset

 If you are unsure where you installed the toolchain, then you can get a
 good hint using 
\begin_inset listings
inline false
status collapsed

\begin_layout Plain Layout

$ which pic30-coff-gcc
\end_layout

\end_inset

 which will reveal the full path to the program that would have been called
 if you had tried to run 
\family typewriter
pic30-coff-gcc
\family default
.
 In the Makefile, you may additionally need to change the compiler, linker,
 etc.
 program names if you have a modified
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
if only in name; I suspect the common program suffix can be changed to something
 other than 
\family typewriter
pic30-coff-
\family default
.
\end_layout

\end_inset

 build environment.
 At time of writing, in the Makefile you would change 
\family typewriter
CC
\family default
, 
\family typewriter
LD
\family default
, and 
\family typewriter
B2H
\family default
 to match your 
\family typewriter
gcc
\family default
, 
\family typewriter
ld
\family default
 and 
\family typewriter
bin2hex
\family default
, respectively.
\end_layout

\begin_layout Standard
Now, to build the firmware, 
\begin_inset listings
inline false
status collapsed

\begin_layout Plain Layout

$ cd /some/random/path/to/BatStack
\end_layout

\begin_layout Plain Layout

$ cd src/firmware
\end_layout

\begin_layout Plain Layout

$ make
\end_layout

\end_inset

 Whether you have success or failure at this point, please let me, Scott
 Livingston, know.
 I tend to only test platforms that I am actively working on, but am nonetheless
 interested in results from other contexts.
\end_layout

\begin_layout Standard
The result of the build process is a Hex file
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Intel HEX format.
 Basically a way to store binary 
\shape italic
addressed
\shape default
 memory contents in a plaintext file.
 Highly portable and commonly used for flash memory images in embedded systems.
 Cf.
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://en.wikipedia.org/wiki/Intel_hex
\end_layout

\end_inset


\end_layout

\end_inset

, called 
\family typewriter
batstack.hex
\family default
.
 Informally, this specifies what values to put where in the dsPIC33F chip
 program memory.
 See Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "firmware:sec"

\end_inset

 for details, including comments about non-standard arrangements in this
 file.
 This may be written to the target device over the ICSP header using a GoodFET
 programmer
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://goodfet.sourceforge.net/clients/goodfet.pic/
\end_layout

\end_inset


\end_layout

\end_inset

 or any commercial PIC programmer that supports PIC24H/dsPIC33F family targets.
\end_layout

\begin_layout Standard
As noted earlier, interaction with BatStacks is still not user-friendly.
 Any changes to a Stack address or other common configuration parameters
 requires tweaking and re-compiling the firmware, and re-flashing
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\shape italic
Jargon:
\shape default
 to 
\begin_inset Quotes eld
\end_inset

flash
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

re-flash
\begin_inset Quotes erd
\end_inset

 a microcontroller is to write to the internal flash memory, usually in
 bulk; erasing before writing is often implied, but this can be ambiguous.
\end_layout

\end_inset

 the Stack.
 To modify the address, or other config parameters, look for a code section
 near the top of the 
\family typewriter
main()
\family default
 function definition in 
\family typewriter
src/firmware/main.c
\family default
 named 
\begin_inset Quotes eld
\end_inset

Default values
\begin_inset Quotes erd
\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This refers to the default values of the configuration parameters, and a
 few other things.
\end_layout

\end_inset

.
 The Stack address is stored in 
\family typewriter
batstack_id
\family default
, number of blocks to record 
\shape italic
after
\shape default
 the trigger is in 
\family typewriter
posttrigger_len
\family default
, and the firmware build date is encoded in 
\family typewriter
build_date
\family default
.
 See Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "firmware:sec"

\end_inset

 for details; see Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "misctools:sec"

\end_inset

 for notes on 
\family typewriter
gendate.py
\family default
, a tool for creating encoded dates.
\end_layout

\begin_layout Standard
The result of the build process, i.e.
 
\family typewriter
batstack.hex
\family default
, must now be written to the target Stack, or rather, the on-board dsPIC33FJ128G
P710 chip.
 I highly recommend using a GoodFET programmer (mentioned earlier) both
 because I have tested most thoroughly with it and it is open source.
 Other programming methods may be used as long as it conforms to the ICSP
 requirements for the PIC24H/dsPIC33F family and properly attaches to the
 ICSP header (see Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "mcumemhardware:sec"

\end_inset

 or, if you're using an older board, Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:sec"

\end_inset

, for pin labels).
 Though it is typically not necessary, I advise that you verify the flashed
 image occassionally, especially while you are learning about the Array
 system and installation and setup processes.
 And if you use the GoodFET programmer, 
\shape italic
do not forget to erase memory before programming batstack.hex to the chip
\shape default
.
 This may be true for other programmers as well
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
indeed, the erase-then-program sequence is 
\shape italic
necessary
\shape default
 but some software frontends hide this from you.
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection
Position calibration
\end_layout

\begin_layout Standard
There are two important steps to calibrating for position.
 First, select a (global) channel number for each microphone.
 E.g., if there are 64 microphones total in your experimental setup, then
 you should number the mic channels 1 through 64 
\shape italic
and make careful note of this labeling
\shape default
.
 The 
\begin_inset Quotes eld
\end_inset

global
\begin_inset Quotes erd
\end_inset

 number for each of the (at most) four microphones per Stack is specified
 in a 
\begin_inset Quotes eld
\end_inset

channel map
\begin_inset Quotes erd
\end_inset

; see Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "chanmap:sec"

\end_inset

 for details on this file.
\end_layout

\begin_layout Standard
Second, you must determine the actual positions of microphones.
 There are at least two possibilities here.
 The most flexible option is to deterimine with high precision
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
where the interpretation of 
\begin_inset Quotes eld
\end_inset

high
\begin_inset Quotes erd
\end_inset

 depends on your planned experiment.
\end_layout

\end_inset

 the relative positions of the microphones.
 In this case, you only need know the absolute positions of at least three
 microphones for any particular experimental recording in order to obtain
 (by translation and rotation) the absolute positions of all the microphones.
 This relative-to-absolute approach may be the only reasonable option if
 your other measurement equipment requires frequent coordinate frame changes
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
which is often the case in modern, high precision video tracking systems.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Alternatively, you could only track absolute positions of all microphones
 and never formally obtain relative measurements
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
though, of course, relative measurements are immediate from any given 
\begin_inset Quotes eld
\end_inset

absolute
\begin_inset Quotes erd
\end_inset

 measurements.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
The actual method used to measure these microphone positions is open.
 That is, there still does not exist a general, automated, high-precision
 way to do so.
 If you use a modern video-based tracking system in your experiment, then
 I suggest you apply this same system to obtain relative microphone positions
 -- whether all at once, or pieced together in overlapping subsets.
 In any case, please be careful if you try to infer positions from simple
 techniques such as trilateration.
 My attempts at this failed and typically had large, and luckily obvious,
 errors.
\end_layout

\begin_layout Standard
Once all microphone positions are obtained, store results in an array position
 data file, as specified in Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "arrayposfile:sec"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Gain calibration
\end_layout

\begin_layout Standard

\series bold
Cautionary note.

\series default
 If you are working with speakers that operate at a large DC offset voltage,
 e.g.
 120 to 200
\begin_inset space ~
\end_inset

V, 
\shape italic
please be careful
\shape default
.
 Most commercial speakers will provide sufficient insulation, etc.
 so that you need not worry.
 However, homebrew or custom speakers often have very few protective additions
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This does not make them functionally inferior --indeed, often the opposite--
 but rather, a fresh reminder of the difference between 
\begin_inset Quotes eld
\end_inset

research tools
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

end-user products.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

.
 
\begin_inset Quotes eld
\end_inset

Being careful
\begin_inset Quotes erd
\end_inset

 here basically constitutes only powering the speakers when you are about
 to or are actively using them.
 Be aware that some sources need a few seconds or more to build up the necessary
 bias voltage.
\end_layout

\begin_layout Standard
The goal of 
\begin_inset Quotes eld
\end_inset

gain calibration
\begin_inset Quotes erd
\end_inset

 is to record a collection of frequencies played into each microphone at
 the same amplitude and distance (with respect to other microphones).
 In particular, we do not need a flat frequency response from the speaker;
 however, the source must be reliable in the sense that we can with high
 confidence produce the same sound into each microphone.
 Under the assumption of an identical source (and, notably, assuming microphones
 are omnidirectional, i.e.
 we do not require exact 0 degree angle of incidence during recording),
 the differences in channel response profiles indicate how real, experimental
 recordings should be adjusted to make value across channels comparable.
 That is, by adjusting for differences in gain of the hardware, we can meaningfu
lly compare sound intensity arriving across the microphone array.
\end_layout

\begin_layout Standard
There are a variety of methods by which one may perform a gain calibration.
 The traditional manner is to setup the array as it will be used in the
 experiment,
\end_layout

\begin_layout Standard
See Figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "gaincal_schem:fig"

\end_inset

.
\end_layout

\begin_layout Standard

\shape italic
We do not account for phase shifts.
 We only generate an approximate magnitude response profile for a collection
 of frequencies over the band of interest.

\shape default
 Furthermore, we do not account for directionality of the microphones under
 the assumption that most (or all) sound sources during recording will have
 an angle of incidence with each microphone such that omnidirectionality
 is a reasonable approximation.
 If there is doubt, and if it matters for your experiment, then there are
 post-hoc methods for considering such effects.
 Or, you can extend the calibration process and analysis tools to account
 for these.
\end_layout

\begin_layout Standard
See Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "gaincalfile:sec"

\end_inset

 for details on the file container for gain calibration data.
\end_layout

\begin_layout Subsection
Configuration
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "config:sec"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% Setting trigger mode, etc.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Experiment recordings
\end_layout

\begin_layout Subsection
Analysis (beginnings)
\end_layout

\begin_layout Section
Array data file format
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "array_format:sec"

\end_inset


\end_layout

\begin_layout Standard

\shape italic
This file format is subject to change! You may use the version number contained
 in a file to see to which format you should refer.

\shape default
 The version numbering scheme is a finite (or countable?!) subset of the
 natural numbers, beginning at 1.
 Changes should be infrequent, but versioning is introduced 
\shape italic
now
\shape default
 to avoid heartache 
\shape italic
later
\shape default
.
\end_layout

\begin_layout Standard
The naming convention is 
\family typewriter
YYYYMMDD_trialNN.bin
\family default
, where 
\family typewriter
YYYY
\family default
, 
\family typewriter
MM
\family default
 and 
\family typewriter
DD
\family default
 is year, month and day, respectively, and 
\family typewriter
NN
\family default
 is trial number.
 Note that these should be zero-extended numbers, e.g.
 trial 13 on 9 May 2010 would be 20100509_trial13.bin.
\end_layout

\begin_layout Standard
At the time of writing, two m-functions (tested in Matlab, not yet verified
 in Octave) for reading and writing conformant data files are 
\family typewriter
loadafile.m
\family default
 and 
\family typewriter
genafile.m
\family default
, resp.
 These can be found in the BatStack sourcetree under 
\family typewriter
src/analysis
\family default
.
\end_layout

\begin_layout Standard
We begin with some general organization notes.
 Array data is not stored in a well known file container but can easily
 be read/written from any decent programming environment.
 E.g., from Octave or Matlab, try functions like 
\family typewriter
fopen
\family default
, 
\family typewriter
fwrite
\family default
, 
\family typewriter
fread
\family default
.
 A general library (or 
\begin_inset Quotes eld
\end_inset

software development kit
\begin_inset Quotes erd
\end_inset

) in Python, C and Matlab may be written in the future.
 
\end_layout

\begin_layout Itemize

\series bold
N.B.
\series default
, byte ordering is little endian; 
\end_layout

\begin_layout Itemize
each sample is stored as an unsigned 16-bit integer; 
\end_layout

\begin_layout Itemize
samples are interleaved across channels; 
\end_layout

\begin_layout Itemize
the first byte specifies the file format version number, regardless of the
 version.
 Designers of new formats: please respect this! 
\end_layout

\begin_layout Standard
File format listings below are sorted by byte addresses (relative to file
 starting pointer).
 Elemental data types are 
\end_layout

\begin_layout Description
u8 unsigned 8-bit integer 
\end_layout

\begin_layout Description
u16 unsigned 16-bit integer 
\end_layout

\begin_layout Description
iv sequential data, interleaved (hence, you must know number of channels
 (i.e.
 number of microphones) for this).
 
\end_layout

\begin_layout Description
blk sequential data, in blocks (i.e.
 not interleaved; hence you must know the number samples per channel for
 this).
 
\end_layout

\begin_layout Description
cN ASCII string of length 
\begin_inset Formula $N$
\end_inset

; (this does 
\shape italic
not
\shape default
 include the null terminator, which typically is not stored in the data
 files.) 
\end_layout

\begin_layout Subsection
Version 1 (and God said\SpecialChar \ldots{}
)
\end_layout

\begin_layout Standard
\noindent

\series bold
Comments.

\series default
 This is the first version and is being phased out -- do 
\shape italic
not
\shape default
 use it for new Array data files.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

0
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u8) version number 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

1-2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u16) recording date 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

3
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u8) trial number 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

4
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u8) number of mic channels 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

5-6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u16) sample period (in 10 ns units) 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

7-10
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u32) post-trigger samples (i.e., number of samples (per channel) after the
 trigger) 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

11-138
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (c128) other notes (e.g., bat ID, room temperature and humidity), as a non-null
 terminated ASCII string; unused elements should be set to 
\begin_inset Formula $0$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

139
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u16, iv) the actual array data, interleaved.
 
\end_layout

\begin_layout Subsection
Version 2
\end_layout

\begin_layout Standard
\noindent

\series bold
Comments.

\series default
 This is nearly identical to Version
\begin_inset space ~
\end_inset

1 except the actual mic channel data is stored in blocks, rather than interleave
d.
 Block organization (i.e.
 where all data for a particular channel is in one sequence of consecutive
 addresses) provides dramatic performance improvements when reading and
 writing
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
actually, when using the 
\family typewriter
batstack
\family default
 Python module, not for writing these files.
 Eventually I will try to improve writing to exploit the block organization.
\end_layout

\end_inset

 Array data files.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

0
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u8) version number 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

1-2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u16) recording date 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

3
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u8) trial number 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

4
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u8) number of mic channels 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

5-6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u16) sample period (in 10 ns units) 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

7-10
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u32) post-trigger samples (i.e., number of samples (per channel) after the
 trigger) 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

11-138
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (c128) other notes (e.g., bat ID, room temperature and humidity), as a non-null
 terminated ASCII string; unused elements should be set to 
\begin_inset Formula $0$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

139
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (u16, blk) the actual array data, in channel blocks; i.e., if there are 
\family typewriter
chan_len
\family default
 samples per microphone channel, then in this section, bytes
\begin_inset space ~
\end_inset

1-
\family typewriter
chan_len
\family default
 are for channel
\begin_inset space ~
\end_inset

1, bytes (
\family typewriter
chan_len
\family default
+1)-(2
\begin_inset Formula $\cdot$
\end_inset


\family typewriter
chan_len
\family default
 are for channel
\begin_inset space ~
\end_inset

2, and so on.
 
\end_layout

\begin_layout Section
Microphone position and gain calibration data
\end_layout

\begin_layout Subsection
From local to global
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "chanmap:sec"

\end_inset


\end_layout

\begin_layout Standard
Each BatStack operates its own channels under a local numbering scheme,
 irrespective of other equipment.
 This must be made to correspond to some channel number unique within a
 particular experimental setup.
 That is, each Stack will have channels 1 through 4
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
because, at time of writing, each Stack supports up to 4 microphones.
\end_layout

\end_inset

, and each of these should map to a number in 
\begin_inset Formula ${1,\ldots,N}$
\end_inset

 where 
\begin_inset Formula $N$
\end_inset

 is the total number of microphones in your setup.
 This is usually achieved using a 
\begin_inset Quotes eld
\end_inset

channel map
\begin_inset Quotes erd
\end_inset

, which is a plain text file that lists all Stack addresses under consideration,
 and to what global channel each local one should map to.
\end_layout

\begin_layout Standard
In words, the file specification is as follows: each line lists 4 global
 channels, where the first element is for local channel 1, second is for
 local channel 2, and so on, with 0 indicating an unimplemented local channel.
 Because there are up to 4 microphones attached to a single Stack, there
 are precisely 4 numbers per line, 
\shape italic
unless
\shape default
 the corresponding Stack address is manually specified, in which case there
 are 5 numbers, with the first being a hexadecimal address.
 Otherwise, the line number is used as the corresponding Stack address;
 e.g., the first line is for Stack 
\family typewriter
0x01
\family default
, second line for 
\family typewriter
0x02
\family default
, and so on.
 See Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "firmware:sec"

\end_inset

 for details and notes on addressing BatStacks.
\end_layout

\begin_layout Standard

\family typewriter
read_chanmap
\family default
 is a method for reading channel map files (conforming to the above specificatio
n) and is available in the 
\family typewriter
batstack
\family default
 Python module, located under 
\begin_inset Quotes eld
\end_inset

src/util
\begin_inset Quotes erd
\end_inset

 in the sourcetree.
 Also see notes in Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "misctools:sec"

\end_inset

.
\end_layout

\begin_layout Subsection
Array position
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "arrayposfile:sec"

\end_inset


\end_layout

\begin_layout Standard
A plaintext (possibly in other formats to reduce loss of precision, if this
 proves better than plain text) file with number of lines (or 
\begin_inset Quotes eld
\end_inset

rows
\begin_inset Quotes erd
\end_inset

) corresponding to the number of microphone channels, and three columns
 -- one for each coordinate axis, i.e.
 
\begin_inset Formula $x$
\end_inset

, 
\begin_inset Formula $y$
\end_inset

 and 
\begin_inset Formula $z$
\end_inset

.
 Each line specifies the position of the corresponding microphone (or more
 generally, point of measurement) in space.
 Note that this must lie in the same coordinate system (i.e.
 video calibration) as used in the d3 processing.
\end_layout

\begin_layout Standard
The naming scheme is 
\family typewriter
YYYY.MM.DD.wamike.txt
\family default
 (in the spirit of Sunshine and d3), where 
\family typewriter
YYYY
\family default
, 
\family typewriter
MM
\family default
 and 
\family typewriter
DD
\family default
 are year, month and day, respectively.
\end_layout

\begin_layout Subsection
Transfer function (approximate)
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "gaincalfile:sec"

\end_inset


\end_layout

\begin_layout Standard
Approximate transfer functions (or 
\begin_inset Quotes eld
\end_inset

gain calibration
\begin_inset Quotes erd
\end_inset

 data) for array channels are stored in Matlab MAT files, at least version
 6 or 7.
 Though there may be other variables in the gain file, the key item is the
 compensation matrix 
\begin_inset Formula $G$
\end_inset

, as generated by the m-script 
\family typewriter
gencomp
\family default
, which is located under 
\family typewriter
src/analysis/gain_calib
\family default
 in the BatStack sourcetree.
 Confer the help doc therein for details.
\end_layout

\begin_layout Standard
Gain calibration files are likely also to include, for reference, the 
\family typewriter
fenv
\family default
 matrix and 
\family typewriter
freq_divs
\family default
 vector, which give frequency response for all mic channels and corresponding
 intervals of spectral energy measurement for creating the piecewise-linear
 freq response curves.
 The two m-scripts associated with these last two variables are 
\family typewriter
freqenv
\family default
 and 
\family typewriter
loadgainrec
\family default
, both of which are also under the gain_calib directory.
\end_layout

\begin_layout Standard
The naming convention is 
\family typewriter
YYYYMMDD.wagaincal.mat
\family default
.
 Other items in the name indicate (most likely) non-standard storage container,
 e.g.
 
\family typewriter
*.MATv7.mat
\family default
 or 
\family typewriter
*.hdf
\family default
 reveal that the file was saved in MAT version 7 format or hierarchical
 data format (HDF5), respectively.
\end_layout

\begin_layout Section
Radiance: an analysis tool
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "radiance:sec"

\end_inset


\end_layout

\begin_layout Standard
Imagine a hybrid of Sunshine and Batgadget on methylphenidate; hence, Radiance.
\end_layout

\begin_layout Subsection
Radiance results file
\end_layout

\begin_layout Standard
Data is stored as a Matlab MAT file, at least versions 6 and 7 should be
 supported.
 These files will follow a naming convention of 
\family typewriter
*_rad.mat
\family default
 and contain a single structure called 
\family typewriter
radiance_analysed
\family default
, which has fields (type is matrix of doubles --as usual in Matlab-- unless
 noted otherwise) as follows.
 Note that, no matter what the version, the analysis results structure must
 contain a field called 
\begin_inset Quotes eld
\end_inset

version
\begin_inset Quotes erd
\end_inset

 that indicates to which specification it adheres.
\end_layout

\begin_layout Subsubsection
Version 1
\end_layout

\begin_layout Description
version version number 
\shape italic
of this data structure specification
\shape default
; in particular, Radiance revision numbers are not causally related to this
 version number.
 
\end_layout

\begin_layout Description
timestamp (char string) of form YYYY-MM-DD 
\end_layout

\begin_layout Description
trial_num trial number 
\end_layout

\begin_layout Description
bat_ID (char string) identification for the subject(s) of the experiment;
 e.g., 
\begin_inset Quotes eld
\end_inset

BK59
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

W30 P73
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Description
owner (char string) the neighbor who is processing or otherwise responsible
 for this trial; this is free form, can be left blank and indeed, may prove
 unpopular.
 
\end_layout

\begin_layout Description
d3_file (char string) path to corresponding d3 analysis MAT file, 
\family typewriter
*_d3.mat
\family default
.
 
\end_layout

\begin_layout Description
wamike_file (char string) path to corresponding wideband array microphone
 position file (naming scheme of 
\family typewriter
YYYY.MM.DD.wamike.txt
\family default
).
 
\end_layout

\begin_layout Description
wagaincal_file (char string) path to corresponding array gain calibration
 file (naming scheme of 
\family typewriter
YYYYMMDD.wagaincal.mat
\family default
).
 
\end_layout

\begin_layout Description
data_file (char string) path to array data file (naming scheme of 
\family typewriter
YYYYMMDD_trialNN.bin
\family default
, where texttt
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

NN
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is the (zero-filled, width 2) trial number).
 
\end_layout

\begin_layout Description
num_vocs number of vocalizations marked; note that necessarily 
\family typewriter
num_vocs
\family default
 equals the number of columns in 
\family typewriter
T_start
\family default
 (and the other call timing matrices).
 
\end_layout

\begin_layout Description
num_mics number of microphone channels; this number occurs in 
\shape italic
many
\shape default
 other places and is provided here both for convenience and as a consistency
 check.
 
\end_layout

\begin_layout Description
T_start Let 
\begin_inset Formula $k$
\end_inset

 be the number of microphones and 
\begin_inset Formula $m$
\end_inset

 the number of (globally referenced) calls observed on at least one channel.
 Then 
\family typewriter
T_start
\family default
 is a 
\begin_inset Formula $k\times m$
\end_inset

 matrix of call start times, where the element at 
\begin_inset Formula $(i,j)$
\end_inset

 (i.e.
 row 
\begin_inset Formula $i$
\end_inset

 and column 
\begin_inset Formula $j$
\end_inset

) is the call start time (as marked in Radiance) for mic channel 
\begin_inset Formula $i$
\end_inset

 and is the 
\begin_inset Formula $j$
\end_inset

-th call to be found, or NaN (
\begin_inset Quotes eld
\end_inset

not-a-number
\begin_inset Quotes erd
\end_inset

) if no call was found on mic 
\begin_inset Formula $i$
\end_inset

 within some time window for reasonably grouping a vocalization across the
 array channels.
 
\end_layout

\begin_layout Description
F_start Entirely similar to 
\family typewriter
T_start
\family default
, except for start frequency of the fundamental sweep.
 
\end_layout

\begin_layout Description
T_stop Entirely similar to 
\family typewriter
T_start
\family default
, except for call stop time.
 
\end_layout

\begin_layout Description
F_stop Entirely similar to 
\family typewriter
T_start
\family default
, except for stop (or 
\begin_inset Quotes eld
\end_inset

end
\begin_inset Quotes erd
\end_inset

) frequency of the fundamental sweep.
 
\end_layout

\begin_layout Standard
In general, unused fields can be set to NaN (i.e.
 
\begin_inset Quotes eld
\end_inset

not-a-number
\begin_inset Quotes erd
\end_inset

), 
\begin_inset Formula $-1$
\end_inset

 or 
\begin_inset Formula $0$
\end_inset

 without fault.
\end_layout

\begin_layout Section
Hardware
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "hardware:sec"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% Circuit schematics, board designs, explanations
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
We begin this section with miscellaneous design notes, to be sorted at some
 later date.
 
\end_layout

\begin_layout Itemize
The high speed digital communication with SRAM chips could be a source of
 noise, especially in the previous design.
\end_layout

\begin_layout Itemize
The second high-pass filter in the amplifier is designed to compensate for
 some deficiency in ultrasonic response.
 
\end_layout

\begin_layout Subsection
Directory
\end_layout

\begin_layout Standard
All circuit design --schematics and layout-- is performed in CadSoft EAGLE
 5.x
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://cadsoft.de/
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout
At time of writing, the Eagle project files are for version 5.10, but these
 can easily be ignored; that is, focus on the board, schematic, design rule
 files, etc.
 and add them to a new Eagle project on your rig if necessary.
\end_layout

\end_inset

.
 In the BatStack sourcetree, under the directory 
\family typewriter
hardware
\family default
, we have 
\end_layout

\begin_layout Description
BatStack_mcu_board ...
\end_layout

\begin_layout Description
BatStack_mic_amp ...
\end_layout

\begin_layout Description
gain_calibration hardware corresponding to the Array gain calibration tool,
 
\family typewriter
gaincal
\family default
 (in the sourcetree under 
\family typewriter
src/util/gain_calibration
\family default
).
 
\end_layout

\begin_layout Subsection
Mic amplifier
\end_layout

\begin_layout Standard
A poor-quality photo of the current microphone amplifier board (
\begin_inset Quotes eld
\end_inset

r2
\begin_inset Quotes erd
\end_inset

, or 
\begin_inset Quotes eld
\end_inset

release 2
\begin_inset Quotes erd
\end_inset

) is shown in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "ampbrd2:fig"

\end_inset

.
 Circuit schematic in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "micamp_schem:fig"

\end_inset

.
 I informally tested a prototype of the current board on 15
\begin_inset space ~
\end_inset

October
\begin_inset space ~
\end_inset

2010; the result was apparently successful, though more tests are needed
 for additional validation and characterization.
 Current drawn by a single amplifier is approximately 7.26
\begin_inset space ~
\end_inset

mA.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics
	filename figures/amp_r2_board.png
	width 2.5in

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset OptArg
status collapsed

\begin_layout Plain Layout
Microphone amplifier board, r2
\end_layout

\end_inset

A poor-quality photo of the current microphone amplifier board (
\begin_inset Quotes eld
\end_inset

r2
\begin_inset Quotes erd
\end_inset

, or 
\begin_inset Quotes eld
\end_inset

release 2
\begin_inset Quotes erd
\end_inset

).
 The power/signal cable attaches to the white 3-pin socket on the left and
 the microphone leads (not shown) attach near the right edge.
 The last high-gain stage is adjusted with the blue potentiometer on the
 bottom-left of the photo.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "ampbrd2:fig"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics
	filename figures/mic_amp_schematic.png
	height 100theight%

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
Circuit schematic of microphone amplifier.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "micamp_schem:fig"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
MCU and memory boards
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "mcumemhardware:sec"

\end_inset


\end_layout

\begin_layout Standard
Circuit schematic in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "mcubrd_schem:fig"

\end_inset

.
\end_layout

\begin_layout Standard
The MCU is surrounded by various communication headers.
 These are 
\end_layout

\begin_layout Itemize
ICSP
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
In-Circuit System Programming.
\end_layout

\end_inset

 -- Table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "icsp_hdr:tbl"

\end_inset

, 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
 
\begin_inset Caption

\begin_layout Plain Layout
Standard ICSP header
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "icsp_hdr:tbl"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Label
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pin
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
!MCLR 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vdd 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GND 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PGD 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PGC 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics
	filename figures/mcu_board_schematic.png
	width 100text%

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset OptArg
status collapsed

\begin_layout Plain Layout
Circuit schematic of microcontroller and memory boards
\end_layout

\end_inset

Circuit schematic of MCU and memory boards.
 Note that 
\shape italic
only one SRAM module is shown.

\shape default
 The SRAM chips have a common address bus and data bus, though the figure
 does not clearly show this.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "mcubrd_schem:fig"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Other
\end_layout

\begin_layout Standard
The schematic for the gain calibration tool is in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "gaincal_schem:fig"

\end_inset

.
 Notice the trigger output is near the left-side.
 It is a simple arrangement where the output is pulled to ground (through
 the 4.7
\begin_inset space ~
\end_inset

k
\begin_inset Formula $\Omega$
\end_inset

 resistor) while the NPN transistor is 
\begin_inset Quotes eld
\end_inset

off
\begin_inset Quotes erd
\end_inset

, and brought quickly to 3.3
\begin_inset space ~
\end_inset

V (or 
\begin_inset Quotes eld
\end_inset

high
\begin_inset Quotes erd
\end_inset

) as a trigger signal when the microcontroller switches the NPN transistor
 
\begin_inset Quotes eld
\end_inset

on.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics
	filename figures/gaincal_schematic.png
	height 100theight%

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset OptArg
status collapsed

\begin_layout Plain Layout
Gain calibration circuit
\end_layout

\end_inset

Gain calibration circuit.
 The odd X1 and X2 semi-circular symbols are supposed to indicate a BNC/coaxial
 cable socket, where cable shielding connects to ground.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "gaincal_schem:fig"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Bill of materials
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% What to purchase, and where (recommended)
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
See Tables 
\begin_inset CommandInset ref
LatexCommand ref
reference "mic_parts:tbl"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "mcu_parts:tbl"

\end_inset

.
 As mentioned above, some of these part values are flexible.
 E.g., the 6.8 
\begin_inset Formula $\mu$
\end_inset

F decoupling capacitor could be increased in value.
 Do not be afraid to try variations because these passive components are
 typically quite cheap and can easily/safely be changed with a decent soldering
 station.
 Generally you should buy components with tight tolerance values, e.g.
 
\begin_inset Formula $1\%$
\end_inset

 or better, in order to improve filter quality (or at least, repeatability).
\end_layout

\begin_layout Standard
The 3-pin header on microphone amplifier boards is best mated with Molex
 3-pin 0.1
\begin_inset Quotes erd
\end_inset

 house (part number 22-01-3037).
\end_layout

\begin_layout Standard
I have bought most often from Digikey (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.digikey.com/
\end_layout

\end_inset

) but have also had good times with Mouser (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.mouser.com/
\end_layout

\end_inset

).
 In any case, Octopart (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://octopart.com/
\end_layout

\end_inset

) is an excellent way to find datasheets, and parts availability at (potentially
 obscure) suppliers.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Microphone amplifier parts
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "mic_parts:tbl"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="21" columns="4">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="right" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Package
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Count
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
P/N
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Knowles FG-3629 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
n/a
\shape default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MCP6022 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8-SOIC 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MCP6022-I/SN
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Molex 3 pin 0.1
\begin_inset Quotes erd
\end_inset

 header 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
n/a
\shape default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22-23-2031
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1 
\begin_inset Formula $\mu$
\end_inset

F (ceramic) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.5 nF (ceramic) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\begin_inset Formula $\mu$
\end_inset

F (ceramic) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.3 k
\begin_inset Formula $\Omega$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.7 nF (ceramic) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6.8 
\begin_inset Formula $\mu$
\end_inset

F (ceramic) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0805 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8.45 k
\begin_inset Formula $\Omega$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 
\begin_inset Formula $\mu$
\end_inset

F (ceramic) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0805 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
68 pF (ceramic) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
732 
\begin_inset Formula $\Omega$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
976 
\begin_inset Formula $\Omega$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100 k
\begin_inset Formula $\Omega$
\end_inset

 (pot) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
triangle (5
\begin_inset Formula $\times$
\end_inset

2.5 mm) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PV36Y104C01B00
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100 k
\begin_inset Formula $\Omega$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 k
\begin_inset Formula $\Omega$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 k
\begin_inset Formula $\Omega$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.37 k
\begin_inset Formula $\Omega$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LED (green) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0603 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
MCU and memory boards parts
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "mcu_parts:tbl"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="right" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Package
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Count
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
P/N
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.3V regulator (800
\begin_inset space ~
\end_inset

mA) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DPAK 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MC33269DT-3.3GOS-ND
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NPN BJT (discrete; 200
\begin_inset space ~
\end_inset

mA) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TO-92 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2N3904BU
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Notes on old editions
\end_layout

\begin_layout Standard
ExpressPCB
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://expresspcb.com/
\end_layout

\end_inset


\end_layout

\end_inset

 was previously the preferred boardhouse, largely because they offer such
 competitive prices and fast delivery for small/specialty-run prototypes.
 In the BatStack sourcetree, under the directory 
\family typewriter
hardware/archived
\family default
, we have 
\end_layout

\begin_layout Description
DsPICBoardMicrophoneConnector.pcb microphone amplifier cable header board
 (4 headers total) -- created largely as a patch to earlier MCU board designs;
 
\end_layout

\begin_layout Description
micamp.pcb microphone amplifier -- should be indexed as 
\begin_inset Quotes eld
\end_inset

v1.5
\begin_inset Quotes erd
\end_inset

; 
\end_layout

\begin_layout Description
Prototype_ADC_SDCARD_IC_Test_Board_v3.3.pcb MCU board; 
\end_layout

\begin_layout Description
SRAM_Prototype_1.3.pcb memory (or 
\begin_inset Quotes eld
\end_inset

SRAM
\begin_inset Quotes erd
\end_inset

) board; 
\end_layout

\begin_layout Description
custom_expresspcb directory of custom symbols and footprints for ExpressPCB
 layout and schematic drawing software.
 
\end_layout

\begin_layout Subsubsection
SRAM board
\end_layout

\begin_layout Standard
The old SRAM board is being redesigned.
 The noteworthy components on it are
\end_layout

\begin_layout Itemize
CY62167DV30LL-55ZXI 1Mx16 SRAM, 48-TSOP
\end_layout

\begin_layout Itemize
74LVT125DB-T, 3.3V Quad buffer, 14SSOP
\end_layout

\begin_layout Itemize
74LVT126DB-T, 3.3V Quad buffer, 14SSOP
\end_layout

\begin_layout Itemize
4608X-1-103LF-ND 10k resistor array (8 SIP), (digikey)
\end_layout

\begin_layout Subsubsection
MCU board
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "oldmcu:sec"

\end_inset


\end_layout

\begin_layout Standard
Older editions use the LV 24-33 MCUCard for dsPIC33FJ128GP710 (100-TQFP
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
100 pins, thin quad-flat package.
\end_layout

\end_inset

 footprint), as released by Mikroelectronika, Inc.
\end_layout

\begin_layout Standard
The power supply connector is type PJ-202A.
 The ICSP port on older boards is in a non-standard configuration.
 From left to right, the pins are 
\end_layout

\begin_layout Enumerate
Vdd -- power suppy, 3.3V,
\end_layout

\begin_layout Enumerate
PGD -- programmer data line,
\end_layout

\begin_layout Enumerate
PGC -- programmer clock line,
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\overline{\textrm{MCLR}}$
\end_inset

 -- MCU reset (or 
\begin_inset Quotes eld
\end_inset

clear
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Enumerate
GND -- ground.
 
\end_layout

\begin_layout Standard
The SD card SPI interface header --5
\begin_inset Formula $\times$
\end_inset

2 male header, 0.1" spacing-- on the left side of the board (in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:fig"

\end_inset

) has pin labels as in Table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "old_sdspi_hdr:tbl"

\end_inset

, again with the typical orientation, as in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:fig"

\end_inset

.
 We use the notation SDI and SDO for dsPIC33F chip SPI module input and
 output, respectively, as in the device datasheet
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
dsPIC33FJXXXGPX06/X08/X10 Data Sheet, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://ww1.microchip.com/downloads/en/DeviceDoc/70286C.pdf
\end_layout

\end_inset


\end_layout

\end_inset

.
 Deciding which corresponds to 
\begin_inset Quotes eld
\end_inset

MISO
\begin_inset Quotes erd
\end_inset

 and which to 
\begin_inset Quotes eld
\end_inset

MOSI
\begin_inset Quotes erd
\end_inset

 (i.e., standard SPI terminology), depends on your particular configuration,
 that is whether the dsPIC33F is acting as master or slave.
 For SD card communication, the SD card controller is the slave.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
 
\begin_inset Caption

\begin_layout Plain Layout
SD/SPI header labels, old MCU board
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "old_sdspi_hdr:tbl"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="4">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="right" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Label
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pin
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pin
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Label
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GND 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vdd (3.3
\begin_inset space ~
\end_inset

V)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SDO (MOSI) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SDI (MISO)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SCK 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SS
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In Appendix
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldsnapshots:sec"

\end_inset

, images of the old layout for MCU and memory boards are in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu_layout:fig"

\end_inset

 and Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmem_layout:fig"

\end_inset

, respectively.
\end_layout

\begin_layout Standard
A populated exemplar MCU board is shown in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu:fig"

\end_inset

; position references in the following are with respect to this figure.
 It consists of 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
underline{external power jack}
\end_layout

\end_inset

 -- (black, large, in upper-left corner) attachment point for battery or
 other DC voltage supply.
 This connects directly to the voltage regulator (i.e.
 there is no fuse/shock protection; please be careful).
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
underline{3.3V regulator}
\end_layout

\end_inset

 -- (upper-left of figure, next to external power jack) MC33DT-3.3 , provides
 3.3
\begin_inset space ~
\end_inset

V to the Stack; becomes quite hot (too hot?) during operation.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
underline{SD/SPI header}
\end_layout

\end_inset

 -- (left side of figure); 5
\begin_inset Formula $\times$
\end_inset

2 (0.1" spacing) header; provides SPI bus to SD card.
 Usual SPI pins are present: power (Vcc), ground (GND), SS
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
slave select.
\end_layout

\end_inset

, SCK
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
clock; recall that SPI is a synchronous, full-duplex protocol.
\end_layout

\end_inset

, MOSI
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
master-out, slave-in.
\end_layout

\end_inset

, MISO
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
master-in, slave-out.
\end_layout

\end_inset

.
 Thus, 4 of the 10 header pins are unused.
 Note that power (Vcc) is the same supply as for the rest of the Stack:
 3.3
\begin_inset space ~
\end_inset

V, from the regulator.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
underline{Reset button}
\end_layout

\end_inset

 -- (lower left corner of Figure) drops 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
mbox{
\end_layout

\end_inset

!MCLR
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 pin low, causing the dsPIC33F chip to reset
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
formally called a 
\begin_inset Quotes eld
\end_inset

Master Clear Pin Reset
\begin_inset Quotes erd
\end_inset

, but essentially leads to the same result as other reset methods.
\end_layout

\end_inset

.
 For the firmware in use at the time of writing, you should use this button
 to restart a Stack when some non-fatal error is made (by you, a user of
 the Array), thus returning (hopefully) to the ready-for-trigger state.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
underline{trigger pin}
\end_layout

\end_inset

 -- (lower left corner of Figure, next to Reset button; in particular, the
 left of the two pins) connects to a pin on the dsPIC33F chip that is used
 for triggering a recording.
 Note that 
\shape italic
this lacks a needed buffer for receiving an external TTL pulse
\shape default
.
 See left side of Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "mcubrd_schem:fig"

\end_inset

 for the solution
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
basically, NPN BJT with 4.7
\begin_inset space ~
\end_inset

k
\begin_inset Formula $\Omega$
\end_inset

 resistor between ground and emitter, collector connected to Vcc, external
 input at base, and output (to trigger pin on MCU board) from emitter.
\end_layout

\end_inset

.
 Also see notes in Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "triggering:sec"

\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
underline{green indicator LEDs}
\end_layout

\end_inset

 -- (4 total) provide a limited reporting mechanism for the firmware.
 Indeed, 16 (
\begin_inset Formula $=2^{4}$
\end_inset

) messages are possible, unless we incorporate sequential encoding; see
 Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "errorcode:sec"

\end_inset

 for current error codes.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
underline{outdated microphones header}
\end_layout

\end_inset

 -- (along bottom edge of Figure, mid-left) once upon a time, acted as header
 for ribbon cable that provided power and signal for separate microphone
 boards, configured in a stack of PCBs.
 A small adaptor board provides the current 3-pin amplifier cable header
 for four channels, and connects to this much older 5
\begin_inset Formula $\times$
\end_inset

2.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
underline{input (unity) buffer}
\end_layout

\end_inset

 -- (near middle of board, just to left of dsPIC33F socket) buffers input
 from microphone amplifier boards to ADC pins on microcontroller; uses MCP6024
 quad op amp chip, all in unity gain configuration.
 Note that each channel input is led by a series 1
\begin_inset space ~
\end_inset

k
\begin_inset Formula $\Omega$
\end_inset

 resistor for, among other possibilities, safety.
 This could (should?) be replaced by something smaller, e.g.
 100
\begin_inset space ~
\end_inset


\begin_inset Formula $\Omega$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
underline{dsPIC33F breakout socket}
\end_layout

\end_inset

 -- (four large, black 2-row female connection boxes; arranged in a square;
 compare with Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "mikropic:fig"

\end_inset

) attachment point for dsPIC33FJ128GP710 breakout board, as released by
 Mikroelektronika company.
 Decoupling and tank capacitors, and a clock crystal are on this board (hence,
 not included in the original MCU board).
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
underline{memory board socket}
\end_layout

\end_inset

 -- (only solder points are visible in the Figure; compare with Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmem:fig"

\end_inset

) houses address, data and control lines between MCU and SRAM chips.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
underline{ICSP header}
\end_layout

\end_inset

 -- (bottom right, next to I2C header) programming interface; non-standard
 pin order, as noted above.
 Next to the header are two jumpers (red-insulated wires in the Figure).
 These are for the clock and data lines (PGC and PGD, resp.) and can be left
 always connected (as they are in the Figure).
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
underline{I2C header}
\end_layout

\end_inset

 -- (bottom right corner; lacks header pins in Figure) direct connect to
 I2C pins on dsPIC33F chip.
 Only 4 pins are required (as standard with I2C): power, ground, SDA and
 SCL.
 Unused at time of writing.
 Note that pull-up resistors must be added externally to use an I2C bus
 here.
 
\end_layout

\begin_layout Section
Firmware
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "firmware:sec"

\end_inset


\end_layout

\begin_layout Standard
[COMMENTS ABOUT IDIOSYNCRACIES WITH PIC C30 HEX CODING.]
\end_layout

\begin_layout Subsection
Organization
\end_layout

\begin_layout Standard
Note that the SD card SPI interface code controls the slave select (SS;
 also called 
\begin_inset Quotes eld
\end_inset

chip select
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

CS
\begin_inset Quotes erd
\end_inset

) pin manually because there is a bug in the dsPIC33F SPI module hardware
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
still a problem as of silicon revision A4; see errata sheet at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://ww1.microchip.com/downloads/en/DeviceDoc/80446D.pdf
\end_layout

\end_inset


\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\family typewriter
batstack_id
\family default
 8-bit address (or 
\begin_inset Quotes eld
\end_inset

ID
\begin_inset Quotes erd
\end_inset

) of the BatStack.
 Reserved values are 
\end_layout

\begin_deeper
\begin_layout Description

\family typewriter
0x00
\family default
 uninitialized SD card (or storage medium for trial data, more generally);
 
\end_layout

\begin_layout Description

\family typewriter
0xFF
\family default
 broadcast address.
 
\end_layout

\end_deeper
\begin_layout Description

\family typewriter
posttrigger_len
\family default
 number of blocks to record 
\shape italic
after
\shape default
 trigger.
\end_layout

\begin_layout Description

\family typewriter
build_date
\family default
 16-bit encoded date on which firmware was built; this is 
\shape italic
not
\shape default
 automatically set, and serves primarily as a simplified versioning method.
 See Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "bulkmemorg:sec"

\end_inset

 for specification.
 
\end_layout

\begin_layout Subsection
Memory organization on SD card
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "bulkmemorg:sec"

\end_inset


\end_layout

\begin_layout Standard
Because SD cards are block devices, where a block (or 
\begin_inset Quotes eld
\end_inset

sector
\begin_inset Quotes erd
\end_inset

) is 512 bytes long, large and logically separate units of data on the SD
 card are aligned to blocks.
 Note however that this basic organization of trial data on the SD card
 could be applied to other forms of memory storage.
\end_layout

\begin_layout Standard
Grossly speaking, the trial data is stored consecutively in chronological
 order following the header, and the header provides information about the
 installed firmware and various settings and stores a list of links and
 timestamps for trials.
 Specifically, the first two sectors of memory, i.e.
 the first 1024 bytes, serve as the header, which is organized as follows
 by byte addresses: 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

0
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 BatStack ID -- see previous section for reserved addresses; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

1-2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 firmware build date (or 
\family typewriter
BDATE
\family default
), where 
\family typewriter
BDATE
\family default

\begin_inset Formula $<$
\end_inset

4:0
\begin_inset Formula $>$
\end_inset

 is day, 
\family typewriter
BDATE
\family default

\begin_inset Formula $<$
\end_inset

8:5
\begin_inset Formula $>$
\end_inset

 is month, and 
\family typewriter
BDATE
\family default

\begin_inset Formula $<$
\end_inset

15:9
\begin_inset Formula $>$
\end_inset

 is year (in years since 1970, i.e.
 add 1970 to this value); 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

3
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 
\shape italic
high nibble
\shape default
 is (unsigned) sample width (should be 0xA), and 
\shape italic
low nibble
\shape default
 is microphone 
\begin_inset Quotes eld
\end_inset

active
\begin_inset Quotes erd
\end_inset

 flags, 1 bit per channel, value of 1 indicating channel in use; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

4-5
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 sample period in 10 ns units; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

6-7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 post-trigger length (or 
\family typewriter
POSTLEN
\family default
), i.e.
 number of 256-sample (per channel) blocks to be recorded after the trigger;
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

8
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 (unsigned) number of trials recorded; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

9-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 trial data links, where each entry is 12 bytes wides and provides 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

0-3
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 sector address (marks start of trial recording) -- this must be multiplied
 by 512 to get the byte address; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

4-5
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 date (same format as 
\family typewriter
BDATE
\family default
); 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

6-7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 time of day in decaseconds (i.e.
 tens of seconds) since midnight -- combining with previous date field gives
 a complete timestamp; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

8-9
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 
\family typewriter
POSTLEN
\family default
 at time of this trial recording; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset

10-11
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 
\shape italic
reserved
\shape default
, \SpecialChar \ldots{}
 likely will hold sample period at time of recording\SpecialChar \ldots{}
 
\end_layout

\end_deeper
\begin_layout Standard
Note that all multi-byte fields have little endian ordering.
\end_layout

\begin_layout Standard
The BatStack firmware uses the sample period field as an indicator of whether
 recording parameters should be read (and used) from the SD card or set
 to default (i.e.
 compiled) values.
 Specifically, if sample period is 0 per header, then assume header parameters
 are unset.
 This will often be the case for virgin SD cards (not yet paired with a
 Stack).
\end_layout

\begin_layout Subsection
Error codes
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "errorcode:sec"

\end_inset


\end_layout

\begin_layout Standard
If an error occurs on a BatStack that cannot be recovered from (so called
 
\begin_inset Quotes eld
\end_inset

fatal errors
\begin_inset Quotes erd
\end_inset

), then a four bit error code is printed on the on-board LEDs and the machine
 halts.
 The orientation to read the nibble is LSb to right if the board is viewed
 with trigger and reset buttons in the upper right corner.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset


\family typewriter
0001
\family default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 Oscillator error (trap); 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset


\family typewriter
0010
\family default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 Address error (trap); 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset


\family typewriter
0011
\family default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 DMAC
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Direct Memory Access Controller.
\end_layout

\end_inset

 write conflict (trap); 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset


\family typewriter
0100
\family default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 SD card communication error (not necessarily fatal, but easier in this
 early implementation to be so); 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset


\family typewriter
0101
\family default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 Math error (trap); 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset


\family typewriter
0110
\family default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 Stack error (trap); 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset


\family typewriter
1111
\family default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 Unhandled interrupt.
 
\end_layout

\begin_layout Subsection
Creating a build environment
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "createbuildenv:sec"

\end_inset


\end_layout

\begin_layout Standard
Before we begin, note that Microchip distributes a free (as in price, not
 freedom) 
\begin_inset Quotes eld
\end_inset

academic edition
\begin_inset Quotes erd
\end_inset

 IDE
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
integrated development environment.
\end_layout

\end_inset

 for PIC24H/dsPIC33F microcontroller families.
 This, combined with one of their commerical programmers or the GoodFET
 (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://goodfet.sourceforge.net/
\end_layout

\end_inset

) under Windows, should suffice to setup a build environment on a Windows
 box 
\shape italic
for developing firmware
\shape default
.
 At the time of writing, the other tools (e.g.
 
\family typewriter
dumpsd
\family default
) expect a standard Unix (or GNU/Linux) environment.
 Porting to Windows may prove difficult, unless --and this is what I prefer--
 the various tools are rewritten in Python.
\end_layout

\begin_layout Standard
We assume you are working on a modern GNU/Linux system
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Somewhere near Linux 2.6.32, GNU C Library 2.11.1 and GCC 4.4.3
\end_layout

\end_inset

.
 An additional key item, which you may not have installed
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
not having this installed is good cause to feel embarrassed.
 Shame on you.
\end_layout

\end_inset

, is Python.
 Instructions for a standard installation are on the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
mbox{
\end_layout

\end_inset

python.org
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 website: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://python.org/download/
\end_layout

\end_inset

.
 If you are using Debian or Ubuntu, installation should be as simple as
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\end_inset

 # apt-get install python 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset

 At the time of writing, the only tool written in Python is 
\family typewriter
gendate.py
\family default
, which converts a given date (i.e.
 year, month, day) to its 16-bit word representation (cf.
 Sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "bulkmemorg:sec"

\end_inset

).
\end_layout

\begin_layout Standard
The toolchain is an extension of GCC
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
GNU Compiler Collection, or GNU C Compiler.
\end_layout

\end_inset

, targeting the 16-bit PIC families released by Microchip
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
these families are dsPIC33F, PIC24H, dsPIC30F, and PIC24F.
\end_layout

\end_inset

, and a non-free (as in, proprietary, i.e., not open source) C library to
 link against.
 This non-free stuff is not needed if you write in pure assembly.
 We must thus first build the compiler (and assembler, linker, etc.), install
 it, copy in the non-free C library, and then perform any post-installation
 configuration (e.g., mostly setting path variables appropriately).
\end_layout

\begin_layout Standard
A Web author, whom I only know by the handle 
\begin_inset Quotes eld
\end_inset

Matt
\begin_inset Quotes erd
\end_inset

, wrote a good tutorial on the setup process.
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.electricrock.co.nz/blog/2009/08/installing-microchips-c-compiler-for-pic
24-mcus-and-dspic-dscs-c30-on-ubuntu-9-04/
\end_layout

\end_inset

 I defer filling in details for the moment because I will need to create
 a fresh toolchain soon myself, and will make any additional notes at that
 time.
 For now, consider that 
\end_layout

\begin_layout Itemize
I have successfully applied the above process to build and install Microchip's
 C30 v3.23b, beginning with a current and (mostly) typical Ubuntu distribution.
\end_layout

\begin_layout Itemize

\shape italic
Do not
\shape default
 follow Matt's more recent article, 
\begin_inset Quotes eld
\end_inset

Microchop C30 Compiler for Linux.
\begin_inset Quotes erd
\end_inset

 The automated build script can fail in the middle of the build/installation
 process (as it did for me), and leave you with an incomplete result that
 is a bit tricky to undo (as it was for me).
 At most, I suggest you see what the build script does and perform each
 step manually, if appropriate.
 
\end_layout

\begin_layout Subsubsection
External resources
\end_layout

\begin_layout Description
GoodFET JTAG adaptor 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://goodfet.sourceforge.net/
\end_layout

\end_inset


\end_layout

\begin_layout Description
dsPIC33FJ128GP710 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.microchip.com/wwwproducts/Devices.aspx?dDocName=en024676
\end_layout

\end_inset


\end_layout

\begin_layout Description
16-bit PIC programmer's reference 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://ww1.microchip.com/downloads/en/DeviceDoc/70157D.pdf
\end_layout

\end_inset

 (If this link is dead, then look under documentation for the dsPIC33F chip
 above.)
\end_layout

\begin_layout Description
16-bit PIC assembler, linker 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://ww1.microchip.com/downloads/en/DeviceDoc/DS-51317H.pdf
\end_layout

\end_inset

 (If this link is dead, search for 
\begin_inset Quotes eld
\end_inset

C30
\begin_inset Quotes erd
\end_inset

 related downloads on Microchip's website; and notify Scott!)
\end_layout

\begin_layout Description
16-bit PIC C compiler 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://ww1.microchip.com/downloads/en/DeviceDoc/51284J.pdf
\end_layout

\end_inset

 
\end_layout

\begin_layout Section
Tools miscellany
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "misctools:sec"

\end_inset


\end_layout

\begin_layout Standard
This section is scatter-brained by construction.
 Have fun.
 And note that not every little thing is mentioned here, and often times
 comments written at the top (or in the midst) of source code files are
 a better reference.
\end_layout

\begin_layout Standard
As with most software or firmware in the project, you can usually assume
 that building is achieved by running 
\family typewriter
make
\family default
 in the appropriate directory.
 E.g., to build the imaginary 
\family typewriter
foobar
\family default
, 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\end_inset

 cd /some/random/path/to/BatStack cd src/foobar make 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset

 This requires a Makefile.
 Look in any of these Makefiles for details of the orchestrated build process
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Do not worry; the build scripts are not auto-generated.
 I wrote them by hand.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
If you do not see the program that interests you mentioned below, then try
 looking toward the top of the source code file for documentation.
 For Octave/Matlab scripts, 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\end_inset

 
\begin_inset Quotes ald
\end_inset

 help spicegirl 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset

 might return helpful information about using the 
\family typewriter
spicegirl
\family default
 function.
 If you are still lost, then please contact me, Scott Livingston.
 Email is preferred.
\end_layout

\begin_layout Standard
Here is a laundry list.
 Paths are relative to the BatStack sourcetree root.
 For some programs, passing 
\begin_inset Quotes eld
\end_inset

-h
\begin_inset Quotes erd
\end_inset

 as an argument causes usage notes to be printed (e.g., 
\family typewriter
gendate.py
\family default
).
 For others, calling the program with no arguments --when some are mandatory--
 will cause a usage message to be printed (e.g., 
\family typewriter
dumpsd
\family default
).
 
\end_layout

\begin_layout Description
util/
\family typewriter
batstack
\family default
 (a Python module); Please see help documentation within the module for
 usage, details, etc.
 From the command-line, try something like 
\begin_inset listings
inline false
status collapsed

\begin_layout Description

$ cd src/util
\end_layout

\begin_layout Description

$ pydoc batstack
\end_layout

\end_inset

 where I included 
\begin_inset Quotes eld
\end_inset

cd src/util
\begin_inset Quotes erd
\end_inset

 to remind you to change to the directory where 
\family typewriter
batstack.py
\family default
; of course, this is not necessary if the directory is in your 
\family typewriter
PYTHONPATH
\family default
.
 For newbies, note that we do not include the trailing 
\begin_inset Quotes eld
\end_inset

*.py
\begin_inset Quotes erd
\end_inset

 when using 
\family typewriter
pydoc
\family default
 (the Python documentation tool), i.e.
 the actual file is 
\family typewriter
src/util/batstack.py
\family default
.
\end_layout

\begin_layout Description
util/
\family typewriter
memcheck
\family default
 Check an attached memory board to verify that read and write operations
 work correctly.
 The approach used is not complete, and for the code revision at time of
 writing, some types of errors can slip by undetected during this check.
\end_layout

\begin_layout Description
util/
\family typewriter
gendate.py
\family default
 Encode the given date in the 16-bit container used by the firmware (cf.
 Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "bulkmemorg:sec"

\end_inset

).
 Running without arguments will use today as the date (as reported by the
 host operating system).
 E.g., if I run it now on my laptop, (copy-and-pasted from my terminal) 
\begin_inset listings
inline false
status collapsed

\begin_layout Description

$ ./gendate.py
\end_layout

\begin_layout Description

Using today (i.e.
 26/09/2010)
\end_layout

\begin_layout Description

0x513A
\end_layout

\end_inset

 To specify a specific date, use the form 
\begin_inset Quotes eld
\end_inset

YYYY MM DD
\begin_inset Quotes erd
\end_inset

.
 E.g., for February 12, 2009, (again, copy-and-pasted) 
\begin_inset listings
inline false
status collapsed

\begin_layout Description

$ ./gendate.py 2009 2 12
\end_layout

\begin_layout Description

0x4E4C
\end_layout

\end_inset


\end_layout

\begin_layout Description
util/legacy/
\family typewriter
update12.py
\family default
 Convert Array data files (cf.
 Sec.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "array_format:sec"

\end_inset

) from file spec
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\shape italic
Jargon:
\shape default
 
\begin_inset Quotes eld
\end_inset

spec
\begin_inset Quotes erd
\end_inset

 abbreviates 
\begin_inset Quotes eld
\end_inset

specification.
\begin_inset Quotes erd
\end_inset

 More generally it can refer to a formal standard or format.
\end_layout

\end_inset

 version
\begin_inset space ~
\end_inset

1 to version
\begin_inset space ~
\end_inset

2.
 
\end_layout

\begin_layout Section
Tips & tricks, or 
\begin_inset Quotes eld
\end_inset

saving the youth
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "tips:sec"

\end_inset


\end_layout

\begin_layout Standard
Here we list various unsorted but important notes on building, using, debugging,
 etc.
 the Batlab Microphone Array.
 Hopefully these tips are non-obvious and will save you from many hours
 of suffering.
\end_layout

\begin_layout Itemize
We are interested in an acoustic signal of brief duration and large dynamic
 range.
\end_layout

\begin_layout Itemize
While we are still using SD cards for bulk local memory storage, I 
\shape italic
highly
\shape default
 advise using Sandisk brand 2 GB cards.
 Other sizes should (and have) worked fine, but 2 GB SD cards have been
 tested the most.
 I have tried a different brand of SD card (the name of which I cannot recall\SpecialChar \ldots{}

 it is white-ish and sold in the UMD STAMP Student Union bookstore), and
 it was horidly buggy and slow.
 A possible reason for this is that some vendors deviate from the published
 SD over SPI protocol, which is precisely what I used while writing read/write
 routines for such memory.
 This explanation is justified even if decent performance is obtained when
 such a SD card is used in a desktop computer because many operating system
 device drivers are designed to handle deviations from published standards,
 and possibly, the SD native communication mode may be properly implemented
 while only half-assed SPI support is provided.
\end_layout

\begin_layout Itemize
Pay attention to triggering.
 Notice the 
\end_layout

\begin_deeper
\begin_layout Itemize
network of connections with the trigger source, 
\end_layout

\begin_layout Itemize
(nominal) electrical characteristics of the trigger source, 
\end_layout

\begin_layout Itemize
what sort of 
\begin_inset Quotes eld
\end_inset

load
\begin_inset Quotes erd
\end_inset

 the receiving (i.e.
 
\begin_inset Quotes eld
\end_inset

triggered
\begin_inset Quotes erd
\end_inset

) devices represent, and 
\end_layout

\begin_layout Itemize
timing of the final system! 
\end_layout

\begin_layout Standard
There should be some notes in this regard on the Batlab Wiki website, 
\begin_inset Quotes eld
\end_inset

wikibat.
\begin_inset Quotes erd
\end_inset

 The basic tips are to ensure all devices on the trigger line are powered
 on (and waiting for an external trigger) and that none of them will do
 something unneighborly to the shared line after being triggered, e.g.
 pulling it low and possibly preventing other devices from ever getting
 triggered.
\end_layout

\end_deeper
\begin_layout Itemize
If you are developing the firmware, then be aware that the C30 compiler
 (a port of gcc; also variously called 
\begin_inset Quotes eld
\end_inset

PIC30
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

pic30-coff
\begin_inset Quotes erd
\end_inset

) can generate flawed assembly, which can lead to subtle stack alignment
 errors that later cause traps.
 The debugging lesson: in addition to the C code, do not be afraid to consider
 the assembly code.
 
\family typewriter
objdump
\family default
 is your friend.
\end_layout

\begin_layout Standard
\start_of_appendix
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%dummy comment inserted by tex2lyx to ensure that this paragraph is not
 empty
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Snapshots of old layout
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "oldsnapshots:sec"

\end_inset


\end_layout

\begin_layout Standard
Figs.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu_layout:fig"

\end_inset

--
\begin_inset CommandInset ref
LatexCommand ref
reference "oldmem_layout:fig"

\end_inset

; these are screenshots of ExpressPCB layout.
 Red is top layer, green is bottom layer, yellow is silkscreen.
 Note that since we bought 
\begin_inset Quotes eld
\end_inset

prototype
\begin_inset Quotes erd
\end_inset

 boards, there was no silkscreen (nor soldermask, etc.).
\end_layout

\begin_layout Standard

\series bold
N.B.
\series default
, the MCU board layout in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "oldmcu_layout:fig"

\end_inset

 does not perfectly match the boards you have on hand.
 Indeed, 
\shape italic
you should not have this fabricated
\shape default
 because it includes at least one error, and even an unused (i.e.
 
\begin_inset Quotes eld
\end_inset

floating
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

unconnected
\begin_inset Quotes erd
\end_inset

) 2
\begin_inset Formula $\times$
\end_inset

5 socket in the lower left.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics
	filename figures/old_mcu_layout.png
	height 100theight%

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset OptArg
status collapsed

\begin_layout Plain Layout
Old microcontroller board layout using ExpressPCB
\end_layout

\end_inset

Old MCU board layout using ExpressPCB software.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "oldmcu_layout:fig"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics
	filename figures/old_mem_layout.png
	height 100theight%

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset OptArg
status collapsed

\begin_layout Plain Layout
Old memory board layout using ExpressPCB
\end_layout

\end_inset

Old memory (or 
\begin_inset Quotes eld
\end_inset

SRAM
\begin_inset Quotes erd
\end_inset

) board layout using ExpressPCB software.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "oldmem_layout:fig"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Additional resources
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% Links to websites, book references, etc.
 that would be helpful in
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% constructing and understanding the mic array.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://octopart.com/
\end_layout

\end_inset

 for datasheets, and parts availability at many suppliers (aside from Digi-Key
 and Mouser).
\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://wiki.hacdc.org/index.php/Suppliers
\end_layout

\end_inset

 for an excellent directory (at time of writing) of electronics stores,
 boardhouses, CNC/millhouses, materials suppliers, etc.
 This website is organized by DC's hackerspace, HacDC.
 Their website is 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.hacdc.org/
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Section*
Acknowledgments
\end_layout

\begin_layout Standard
Murat Aytekin, who began the project.
 Lakshmi Krishnan for photographs of array hardware.
 Ben Falk and Mel Wohlgemuth for great discussions.
 Others who will be thanked when this is not a draft\SpecialChar \ldots{}
 Special thanks is sent
 out to all the bats of my life.
\end_layout

\end_body
\end_document
